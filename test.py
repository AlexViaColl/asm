#!/usr/bin/env python3

import os
import sys
import subprocess
import traceback
from operator import attrgetter
from asm import assemble, disassemble, ident, link, literal, symbol, tokenize, Token

instructions = {
    # 1-byte Opcodes
    'ADD BYTE PTR [eax], al':           b'\x00\x00',
    'ADD BYTE PTR [ecx], al':           b'\x00\x01',
    'ADD BYTE PTR [edx], al':           b'\x00\x02',
    'ADD BYTE PTR [ebx], al':           b'\x00\x03',
    'ADD BYTE PTR [eax+eax*1], al':     b'\x00\x04\x00',
    'ADD BYTE PTR [ecx+eax*1], al':     b'\x00\x04\x01',
    'ADD BYTE PTR [edx+eax*1], al':     b'\x00\x04\x02',
    'ADD BYTE PTR [ebx+eax*1], al':     b'\x00\x04\x03',
    'ADD BYTE PTR [esp+eax*1], al':     b'\x00\x04\x04',
    # b'\x00\x04\x05',
    'ADD BYTE PTR [esi+eax*1], al':     b'\x00\x04\x06',
    'ADD BYTE PTR [edi+eax*1], al':     b'\x00\x04\x07',
    'ADD BYTE PTR [eax+ecx*1], al':     b'\x00\x04\x08',
    'ADD BYTE PTR [ecx+ecx*1], al':     b'\x00\x04\x09',
    'ADD BYTE PTR [edx+ecx*1], al':     b'\x00\x04\x0a',
    'ADD BYTE PTR [ebx+ecx*1], al':     b'\x00\x04\x0b',
    'ADD BYTE PTR [esp+ecx*1], al':     b'\x00\x04\x0c',
    # b'\x00\x04\x0d',
    'ADD BYTE PTR [esi+ecx*1], al':     b'\x00\x04\x0e',
    'ADD BYTE PTR [edi+ecx*1], al':     b'\x00\x04\x0f',

    'ADD BYTE PTR [eax+edx*1], al':     b'\x00\x04\x10',
    'ADD BYTE PTR [ecx+edx*1], al':     b'\x00\x04\x11',
    'ADD BYTE PTR [edx+edx*1], al':     b'\x00\x04\x12',
    'ADD BYTE PTR [ebx+edx*1], al':     b'\x00\x04\x13',
    'ADD BYTE PTR [esp+edx*1], al':     b'\x00\x04\x14',
    # b'\x00\x04\x15',
    'ADD BYTE PTR [esi+edx*1], al':     b'\x00\x04\x16',
    'ADD BYTE PTR [edi+edx*1], al':     b'\x00\x04\x17',
    'ADD BYTE PTR [eax+ebx*1], al':     b'\x00\x04\x18',
    'ADD BYTE PTR [ecx+ebx*1], al':     b'\x00\x04\x19',
    'ADD BYTE PTR [edx+ebx*1], al':     b'\x00\x04\x1a',
    'ADD BYTE PTR [ebx+ebx*1], al':     b'\x00\x04\x1b',
    'ADD BYTE PTR [esp+ebx*1], al':     b'\x00\x04\x1c',
    # b'\x00\x04\x1d',
    'ADD BYTE PTR [esi+ebx*1], al':     b'\x00\x04\x1e',
    'ADD BYTE PTR [edi+ebx*1], al':     b'\x00\x04\x1f',

    #'ADD BYTE PTR [eax+eiz*1], al':     b'\x00\x04\x20',
    #'ADD BYTE PTR [ecx+eiz*1], al':     b'\x00\x04\x21',
    #'ADD BYTE PTR [edx+eiz*1], al':     b'\x00\x04\x22',
    #'ADD BYTE PTR [ebx+eiz*1], al':     b'\x00\x04\x23',
    #'ADD BYTE PTR [esp], al':           b'\x00\x04\x24',
    # b'\x00\x04\x25',
    #'ADD BYTE PTR [esi+eiz*1], al':     b'\x00\x04\x26',
    #'ADD BYTE PTR [edi+eiz*1], al':     b'\x00\x04\x27',
    'ADD BYTE PTR [eax+ebp*1], al':     b'\x00\x04\x28',
    'ADD BYTE PTR [ecx+ebp*1], al':     b'\x00\x04\x29',
    'ADD BYTE PTR [edx+ebp*1], al':     b'\x00\x04\x2a',
    'ADD BYTE PTR [ebx+ebp*1], al':     b'\x00\x04\x2b',
    'ADD BYTE PTR [esp+ebp*1], al':     b'\x00\x04\x2c',
    # b'\x00\x04\x2d',
    'ADD BYTE PTR [esi+ebp*1], al':     b'\x00\x04\x2e',
    'ADD BYTE PTR [edi+ebp*1], al':     b'\x00\x04\x2f',

    'ADD BYTE PTR [eax+esi*1], al':     b'\x00\x04\x30',
    'ADD BYTE PTR [ecx+esi*1], al':     b'\x00\x04\x31',
    'ADD BYTE PTR [edx+esi*1], al':     b'\x00\x04\x32',
    'ADD BYTE PTR [ebx+esi*1], al':     b'\x00\x04\x33',
    'ADD BYTE PTR [esp+esi*1], al':     b'\x00\x04\x34',
    # b'\x00\x04\x35',
    'ADD BYTE PTR [esi+esi*1], al':     b'\x00\x04\x36',
    'ADD BYTE PTR [edi+esi*1], al':     b'\x00\x04\x37',
    'ADD BYTE PTR [eax+edi*1], al':     b'\x00\x04\x38',
    'ADD BYTE PTR [ecx+edi*1], al':     b'\x00\x04\x39',
    'ADD BYTE PTR [edx+edi*1], al':     b'\x00\x04\x3a',
    'ADD BYTE PTR [ebx+edi*1], al':     b'\x00\x04\x3b',
    'ADD BYTE PTR [esp+edi*1], al':     b'\x00\x04\x3c',
    # b'\x00\x04\x3d',
    'ADD BYTE PTR [esi+edi*1], al':     b'\x00\x04\x3e',
    'ADD BYTE PTR [edi+edi*1], al':     b'\x00\x04\x3f',

    'ADD BYTE PTR [eax+eax*2], al':     b'\x00\x04\x40',

    'ADD BYTE PTR [eax+eax*4], al':     b'\x00\x04\x80',

    'ADD BYTE PTR [eax+eax*8], al':     b'\x00\x04\xc0',

    'ADD BYTE PTR [edi+ecx*8], al':     b'\x00\x04\xcf',
    'ADD BYTE PTR [edi+edi*8], al':     b'\x00\x04\xff',

    'ADD BYTE PTR ds:0x0, al':          b'\x00\x05\x00\x00\x00\x00',
    'ADD BYTE PTR ds:0xffffffff, al':   b'\x00\x05\xff\xff\xff\xff',

    'ADD BYTE PTR [esi], al':           b'\x00\x06',
    'ADD BYTE PTR [edi], al':           b'\x00\x07',
    'ADD BYTE PTR [eax], cl':           b'\x00\x08',
    'ADD BYTE PTR [ecx], cl':           b'\x00\x09',
    'ADD BYTE PTR [edx], cl':           b'\x00\x0a',
    'ADD BYTE PTR [ebx], cl':           b'\x00\x0b',
    'ADD BYTE PTR [eax+eax*1], cl':     b'\x00\x0c\x00',
    'ADD BYTE PTR [edi+edi*8], cl':     b'\x00\x0c\xff',
    'ADD BYTE PTR ds:0x0, cl':          b'\x00\x0d\x00\x00\x00\x00',
    'ADD BYTE PTR ds:0xffffffff, cl':   b'\x00\x0d\xff\xff\xff\xff',

    'ADD BYTE PTR [esi], cl':           b'\x00\x0e',
    'ADD BYTE PTR [edi], cl':           b'\x00\x0f',
    'ADD BYTE PTR [eax], dl':           b'\x00\x10',
    'ADD BYTE PTR [edi], dl':           b'\x00\x17',
    'ADD BYTE PTR [eax], bl':           b'\x00\x18',
    'ADD BYTE PTR [edi], bl':           b'\x00\x1f',
    'ADD BYTE PTR [eax], ah':           b'\x00\x20',
    'ADD BYTE PTR [edi], ah':           b'\x00\x27',
    'ADD BYTE PTR [eax], ch':           b'\x00\x28',
    'ADD BYTE PTR [edi], ch':           b'\x00\x2f',
    'ADD BYTE PTR [eax], dh':           b'\x00\x30',
    'ADD BYTE PTR [edi], dh':           b'\x00\x37',
    'ADD BYTE PTR [eax], bh':           b'\x00\x38',
    'ADD BYTE PTR [edi], bh':           b'\x00\x3f',

    'ADD BYTE PTR [eax+0x0], al':       b'\x00\x40\x00',
    'ADD BYTE PTR [eax-0x1], al':       b'\x00\x40\xff',
    'ADD BYTE PTR [ecx+0x0], al':       b'\x00\x41\x00',
    'ADD BYTE PTR [edx+0x0], al':       b'\x00\x42\x00',
    'ADD BYTE PTR [ebx+0x0], al':       b'\x00\x43\x00',

    'ADD BYTE PTR [eax+eax*1+0x0], al': b'\x00\x44\x00\x00',
    'ADD BYTE PTR [edi+edi*8-0x1], al': b'\x00\x44\xff\xff',

    'ADD BYTE PTR [ebp+0x0], al':       b'\x00\x45\x00',
    'ADD BYTE PTR [esi+0x0], al':       b'\x00\x46\x00',
    'ADD BYTE PTR [edi+0x0], al':       b'\x00\x47\x00',
    'ADD BYTE PTR [eax+0x0], cl':       b'\x00\x48\x00',
    'ADD BYTE PTR [edi-0x1], cl':       b'\x00\x4f\xff',
    'ADD BYTE PTR [eax+0x0], dl':       b'\x00\x50\x00',
    'ADD BYTE PTR [edi-0x1], dl':       b'\x00\x57\xff',
    'ADD BYTE PTR [eax+0x0], bl':       b'\x00\x58\x00',
    'ADD BYTE PTR [ebp+ebp*4+0x57], bl':b'\x00\x5c\xad\x57',

    'ADD BYTE PTR [edi-0x1], bh':       b'\x00\x7f\xff',

    'ADD BYTE PTR [eax+0x0], al':       b'\x00\x80\x00\x00\x00\x00',
    'ADD BYTE PTR [eax+0x7fffffff], al':b'\x00\x80\xff\xff\xff\x7f',
    'ADD BYTE PTR [eax-0x80000000], al':b'\x00\x80\x00\x00\x00\x80',
    'ADD BYTE PTR [eax-0x1], al':       b'\x00\x80\xff\xff\xff\xff',

    'ADD BYTE PTR [ecx+0x0], al':       b'\x00\x81\x00\x00\x00\x00',
    'ADD BYTE PTR [edx+0x0], al':       b'\x00\x82\x00\x00\x00\x00',
    'ADD BYTE PTR [ebx+0x0], al':       b'\x00\x83\x00\x00\x00\x00',
    'ADD BYTE PTR [eax+eax*1+0x0], al': b'\x00\x84\x00\x00\x00\x00\x00',
    'ADD BYTE PTR [edi+edi*8-0x1], al': b'\x00\x84\xff\xff\xff\xff\xff',
    'ADD BYTE PTR [ebp+0x0], al':       b'\x00\x85\x00\x00\x00\x00',
    'ADD BYTE PTR [esi+0x0], al':       b'\x00\x86\x00\x00\x00\x00',
    'ADD BYTE PTR [edi+0x0], al':       b'\x00\x87\x00\x00\x00\x00',
    'ADD BYTE PTR [eax+0x0], cl':       b'\x00\x88\x00\x00\x00\x00',

    'ADD al, al':                       b'\x00\xc0',
    'ADD cl, al':                       b'\x00\xc1',
    'ADD bh, bh':                       b'\x00\xff',

    'ADD eax, eax':                     b'\x01\xc0',
    'ADD al, al':                       b'\x02\xc0',
    'ADD eax, eax':                     b'\x03\xc0',

    'ADD al, 0x0':                      b'\x04\x00',
    'ADD al, 0x7f':                     b'\x04\x7f',
    'ADD al, 0x80':                     b'\x04\x80',
    'ADD al, 0xff':                     b'\x04\xff',
    'ADD eax, 0x0':                     b'\x05\x00\x00\x00\x00',
    'ADD eax, 0x7fffffff':              b'\x05\xff\xff\xff\x7f',
    'ADD eax, 0x80000000':              b'\x05\x00\x00\x00\x80',
    'ADD eax, 0xffffffff':              b'\x05\xff\xff\xff\xff',
    'PUSH es':                          b'\x06',
    'POP es':                           b'\x07',
    'OR al, al':                        b'\x08\xc0',
    'OR eax, eax':                      b'\x09\xc0',
    'OR al, al':                        b'\x0a\xc0',
    'OR eax, eax':                      b'\x0b\xc0',
    'OR al, 0x0':                       b'\x0c\x00',
    'OR al, 0x7f':                      b'\x0c\x7f',
    'OR al, 0x80':                      b'\x0c\x80',
    'OR al, 0xff':                      b'\x0c\xff',
    'OR eax, 0x0':                      b'\x0d\x00\x00\x00\x00',
    'OR eax, 0x7fffffff':               b'\x0d\xff\xff\xff\x7f',
    'OR eax, 0x80000000':               b'\x0d\x00\x00\x00\x80',
    'OR eax, 0xffffffff':               b'\x0d\xff\xff\xff\xff',
    'PUSH cs':                          b'\x0e',
    'ADC al, al':                       b'\x10\xc0',
    'ADC eax, eax':                     b'\x11\xc0',
    'ADC al, al':                       b'\x12\xc0',
    'ADC eax, eax':                     b'\x13\xc0',
    'ADC al, 0x0':                      b'\x14\x00',
    'ADC al, 0x7f':                     b'\x14\x7f',
    'ADC al, 0x80':                     b'\x14\x80',
    'ADC al, 0xff':                     b'\x14\xff',
    'ADC eax, 0x0':                     b'\x15\x00\x00\x00\x00',
    'ADC eax, 0x7fffffff':              b'\x15\xff\xff\xff\x7f',
    'ADC eax, 0x80000000':              b'\x15\x00\x00\x00\x80',
    'ADC eax, 0xffffffff':              b'\x15\xff\xff\xff\xff',
    'PUSH ss':                          b'\x16',
    'POP ss':                           b'\x17',
    'SBB al, al':                       b'\x18\xc0',
    'SBB eax, eax':                     b'\x19\xc0',
    'SBB al, al':                       b'\x1a\xc0',
    'SBB eax, eax':                     b'\x1b\xc0',
    'SBB al, 0x0':                      b'\x1c\x00',
    'SBB al, 0x7f':                     b'\x1c\x7f',
    'SBB al, 0x80':                     b'\x1c\x80',
    'SBB al, 0xff':                     b'\x1c\xff',
    'SBB eax, 0x0':                     b'\x1d\x00\x00\x00\x00',
    'SBB eax, 0x7fffffff':              b'\x1d\xff\xff\xff\x7f',
    'SBB eax, 0x80000000':              b'\x1d\x00\x00\x00\x80',
    'SBB eax, 0xffffffff':              b'\x1d\xff\xff\xff\xff',
    'PUSH ds':                          b'\x1e',
    'POP ds':                           b'\x1f',
    'AND al, al':                       b'\x20\xc0',
    'AND eax, eax':                     b'\x21\xc0',
    'AND al, al':                       b'\x22\xc0',
    'AND eax, eax':                     b'\x23\xc0',
    'AND al, 0x0':                      b'\x24\x00',
    'AND al, 0x7f':                     b'\x24\x7f',
    'AND al, 0x80':                     b'\x24\x80',
    'AND al, 0xff':                     b'\x24\xff',
    'AND eax, 0x0':                     b'\x25\x00\x00\x00\x00',
    'AND eax, 0x7fffffff':              b'\x25\xff\xff\xff\x7f',
    'AND eax, 0x80000000':              b'\x25\x00\x00\x00\x80',
    'AND eax, 0xffffffff':              b'\x25\xff\xff\xff\xff',
    'ADD BYTE PTR es:[eax+0x0], al':    b'\x26\x00\x40\x00',
    'DAA':                              b'\x27',
    'SUB al, al':                       b'\x28\xc0',
    'SUB eax, eax':                     b'\x29\xc0',
    'SUB al, al':                       b'\x2a\xc0',
    'SUB ebx, DWORD PTR [ebp+eax*4+0x0]': b'\x2b\x5c\x85\x00',
    'SUB eax, eax':                     b'\x2b\xc0',
    'SUB al, 0x0':                      b'\x2c\x00',
    'SUB al, 0x7f':                     b'\x2c\x7f',
    'SUB al, 0x80':                     b'\x2c\x80',
    'SUB al, 0xff':                     b'\x2c\xff',
    'SUB eax, 0x0':                     b'\x2d\x00\x00\x00\x00',
    'SUB eax, 0x7fffffff':              b'\x2d\xff\xff\xff\x7f',
    'SUB eax, 0x80000000':              b'\x2d\x00\x00\x00\x80',
    'SUB eax, 0xffffffff':              b'\x2d\xff\xff\xff\xff',
    'ADD BYTE PTR cs:[eax+0x0], al':    b'\x2e\x00\x40\x00',
    'DAS':                              b'\x2f',
    'XOR al, al':                       b'\x30\xc0',
    'XOR eax, eax':                     b'\x31\xc0',
    'XOR al, al':                       b'\x32\xc0',
    'XOR eax, eax':                     b'\x33\xc0',
    'XOR al, 0x0':                      b'\x34\x00',
    'XOR al, 0x7f':                     b'\x34\x7f',
    'XOR al, 0x80':                     b'\x34\x80',
    'XOR al, 0xff':                     b'\x34\xff',
    'XOR eax, 0x0':                     b'\x35\x00\x00\x00\x00',
    'XOR eax, 0x7fffffff':              b'\x35\xff\xff\xff\x7f',
    'XOR eax, 0x80000000':              b'\x35\x00\x00\x00\x80',
    'XOR eax, 0xffffffff':              b'\x35\xff\xff\xff\xff',
    'ADD BYTE PTR ss:[eax+0x0], al':    b'\x36\x00\x40\x00',
    'AAA':                              b'\x37',
    'CMP al, al':                       b'\x38\xc0',
    'CMP eax, eax':                     b'\x39\xc0',
    'CMP al, al':                       b'\x3a\xc0',
    'CMP eax, DWORD PTR [ebp+ecx*4+0x0]': b'\x3b\x44\x8d\x00',
    'CMP eax, eax':                     b'\x3b\xc0',
    'CMP al, 0x0':                      b'\x3c\x00',
    'CMP al, 0x7f':                     b'\x3c\x7f',
    'CMP al, 0x80':                     b'\x3c\x80',
    'CMP al, 0xff':                     b'\x3c\xff',
    'CMP eax, 0x0':                     b'\x3d\x00\x00\x00\x00',
    'CMP eax, 0x7fffffff':              b'\x3d\xff\xff\xff\x7f',
    'CMP eax, 0x80000000':              b'\x3d\x00\x00\x00\x80',
    'CMP eax, 0xffffffff':              b'\x3d\xff\xff\xff\xff',
    'ADD BYTE PTR ds:[eax+0x0], al':    b'\x3e\x00\x40\x00',
    'AAS':                              b'\x3f',
    'INC eax':                          b'\x40',
    'INC ecx':                          b'\x41',
    'INC edx':                          b'\x42',
    'INC ebx':                          b'\x43',
    'INC esp':                          b'\x44',
    'INC ebp':                          b'\x45',
    'INC esi':                          b'\x46',
    'INC edi':                          b'\x47',
    'DEC eax':                          b'\x48',
    'DEC ecx':                          b'\x49',
    'DEC edx':                          b'\x4a',
    'DEC ebx':                          b'\x4b',
    'DEC esp':                          b'\x4c',
    'DEC ebp':                          b'\x4d',
    'DEC esi':                          b'\x4e',
    'DEC edi':                          b'\x4f',
    'PUSH eax':                         b'\x50',
    'PUSH ecx':                         b'\x51',
    'PUSH edx':                         b'\x52',
    'PUSH ebx':                         b'\x53',
    'PUSH esp':                         b'\x54',
    'PUSH ebp':                         b'\x55',
    'PUSH esi':                         b'\x56',
    'PUSH edi':                         b'\x57',
    'POP edi':                          b'\x57',
    'POP eax':                          b'\x58',
    'POP ecx':                          b'\x59',
    'POP edx':                          b'\x5a',
    'POP ebx':                          b'\x5b',
    'POP esp':                          b'\x5c',
    'POP ebp':                          b'\x5d',
    'POP esi':                          b'\x5e',
    'POP edi':                          b'\x5f',
    'PUSHA':                            b'\x60',
    'POPA':                             b'\x61',
    'BOUND eax, QWORD PTR [eax]':       b'\x62\x00',
    'BOUND eax, QWORD PTR [ecx]':       b'\x62\x01',
    'BOUND eax, QWORD PTR [edx]':       b'\x62\x02',
    'BOUND eax, QWORD PTR [ebx]':       b'\x62\x03',
    'BOUND eax, QWORD PTR [eax+eax*1]': b'\x62\x04\x00',
    'BOUND eax, QWORD PTR ds:0x0':      b'\x62\x05\x00\x00\x00\x00',
    'BOUND eax, QWORD PTR [esi]':       b'\x62\x06',
    'BOUND eax, QWORD PTR [edi]':       b'\x62\x07',
    'BOUND eax, QWORD PTR [eax+0x0]':   b'\x62\x40\x00',

    'BOUND ecx, QWORD PTR [eax]':       b'\x62\x08',
    'BOUND edx, QWORD PTR [eax]':       b'\x62\x10',
    'BOUND ebx, QWORD PTR [eax]':       b'\x62\x18',
    'BOUND esp, QWORD PTR [eax]':       b'\x62\x20',
    'BOUND ebp, QWORD PTR [eax]':       b'\x62\x28',
    'BOUND esi, QWORD PTR [eax]':       b'\x62\x30',
    'BOUND edi, QWORD PTR [eax]':       b'\x62\x38',

    'ARPL WORD PTR [eax], ax':          b'\x63\x00',
    'ARPL WORD PTR [edi], di':          b'\x63\x3f',

    'ADD BYTE PTR fs:[eax+0x0], al':    b'\x64\x00\x40\x00',
    'ADD BYTE PTR gs:[eax+0x0], al':    b'\x65\x00\x40\x00',
    'AND ax, 0x7ff0':                   b'\x66\x25\xf0\x7f',
    #'CMP si, ecx':                      b'\x66\x3b\xf1',
    'CMP ax, 0x1':                      b'\x66\x3d\x01\x00',
    'AND cx, 0xf000':                   b'\x66\x81\xe1\x00\xf0',
    #'mov ax, WORD PTR [ebp-0x2ca]':     b'\x66\x8b\x85\x36\xfd\xff\xff',
    'TEST ax, 0x10c':                   b'\x66\xa9\x0c\x01',
    'MOV bx, 0x133f':                   b'\x66\xbb\x3f\x13',
    'MOV WORD PTR [edi+eax*4], 0x1':    b'\x66\xc7\x04\x87\x01\x00',
    'PUSH 0x0':                         b'\x68\x00\x00\x00\x00',
    'PUSH 0x7fffffff':                  b'\x68\xff\xff\xff\x7f',
    'PUSH 0x80000000':                  b'\x68\x00\x00\x00\x80',
    'PUSH 0xffffffff':                  b'\x68\xff\xff\xff\xff',

    'IMUL eax, DWORD PTR [eax], 0x0':   b'\x69\x00\x00\x00\x00\x00',
    'IMUL eax, DWORD PTR [eax], 0xffffffff': b'\x69\x00\xff\xff\xff\xff',

    'PUSH 0x0':                         b'\x6a\x00',
    'PUSH 0x7f':                        b'\x6a\x7f',
    'PUSH 0xffffff80':                  b'\x6a\x80',
    'PUSH 0xffffffff':                  b'\x6a\xff',
    'IMUL eax, DWORD PTR [eax], 0x0':   b'\x6b\x00\x00',
    'IMUL eax, DWORD PTR [eax], 0xffffffff': b'\x6b\x00\xff',
    'IMUL eax, eax, 0x54':              b'\x6b\xc0\x54',
    'INS BYTE PTR es:[edi], dx':        b'\x6c',
    'INS DWORD PTR es:[edi], dx':       b'\x6d',
    'OUTS dx, BYTE PTR ds:[esi]':       b'\x6e',
    'OUTS dx, DWORD PTR ds:[esi]':      b'\x6f',
    'JO 0x2':                           b'\x70\x00',
    'JNO 0x2':                          b'\x71\x00',
    'JB 0x2':                           b'\x72\x00',
    'JNB 0x2':                          b'\x73\x00',
    'JE 0x2':                           b'\x74\x00',
    'JNE 0x2':                          b'\x75\x00',
    'JBE 0x2':                          b'\x76\x00',
    'JNBE 0x2':                         b'\x77\x00',
    'JS 0x2':                           b'\x78\x00',
    'JNS 0x2':                          b'\x79\x00',
    'JP 0x2':                           b'\x7a\x00',
    'JNP 0x2':                          b'\x7b\x00',
    'JL 0x2':                           b'\x7c\x00',
    'JNL 0x2':                          b'\x7d\x00',
    'JLE 0x2':                          b'\x7e\x00',
    'JNLE 0x2':                         b'\x7f\x00',
    'ADD BYTE PTR [eax], 0x0':          b'\x80\x00\x00',
    'ADD BYTE PTR [eax+eax*1], 0x0':    b'\x80\x04\x00\x00',
    'OR BYTE PTR [eax+eax*1], 0x0':     b'\x80\x0c\x00\x00',
    'ADC BYTE PTR [eax+eax*1], 0x0':    b'\x80\x14\x00\x00',
    'SBB BYTE PTR [eax+eax*1], 0x0':    b'\x80\x1c\x00\x00',
    'AND BYTE PTR [eax+eax*1], 0x0':    b'\x80\x24\x00\x00',
    'SUB BYTE PTR [eax+eax*1], 0x0':    b'\x80\x2c\x00\x00',
    'XOR BYTE PTR [eax+eax*1], 0x0':    b'\x80\x34\x00\x00',
    'CMP BYTE PTR [eax+eax*1], 0x0':    b'\x80\x3c\x00\x00',
    'CMP BYTE PTR [ebp+ecx*1-0x18], 0x0': b'\x80\x7c\x0d\xe8\x00',
    'AND BYTE PTR [ebp+edi*1-0x88], 0x0': b'\x80\xa4\x3d\x78\xff\xff\xff\x00',

    'ADD DWORD PTR [eax+eax*1], 0x0':   b'\x81\x04\x00\x00\x00\x00\x00',
    'ADD DWORD PTR [eax+eax*1], 0xffffffff': b'\x81\x04\x00\xff\xff\xff\xff',
    'OR DWORD PTR [eax+eax*1], 0x0':    b'\x81\x0c\x00\x00\x00\x00\x00',
    'ADC DWORD PTR [eax+eax*1], 0x0':   b'\x81\x14\x00\x00\x00\x00\x00',
    'SBB DWORD PTR [eax+eax*1], 0x0':   b'\x81\x1c\x00\x00\x00\x00\x00',
    'AND DWORD PTR [eax+eax*1], 0x0':   b'\x81\x24\x00\x00\x00\x00\x00',
    'SUB DWORD PTR [eax+eax*1], 0x0':   b'\x81\x2c\x00\x00\x00\x00\x00',
    'XOR DWORD PTR [eax+eax*1], 0x0':   b'\x81\x34\x00\x00\x00\x00\x00',
    'CMP DWORD PTR [eax+eax*1], 0x0':   b'\x81\x3c\x00\x00\x00\x00\x00',
    'CMP DWORD PTR [ebp-0x18], 0x7ff00000': b'\x81\x7d\xe8\x00\x00\xf0\x7f',
    'AND ecx, 0xff00ffff':              b'\x81\xe1\xff\xff\x00\xff',

    'ADD BYTE PTR [eax+eax*1], 0x0':    b'\x82\x04\x00\x00',
    'OR BYTE PTR [eax+eax*1], 0x0':     b'\x82\x0c\x00\x00',
    'ADC BYTE PTR [eax+eax*1], 0x0':    b'\x82\x14\x00\x00',
    'SBB BYTE PTR [eax+eax*1], 0x0':    b'\x82\x1c\x00\x00',
    'AND BYTE PTR [eax+eax*1], 0x0':    b'\x82\x24\x00\x00',
    'SUB BYTE PTR [eax+eax*1], 0x0':    b'\x82\x2c\x00\x00',
    'XOR BYTE PTR [eax+eax*1], 0x0':    b'\x82\x34\x00\x00',
    'CMP BYTE PTR [eax+eax*1], 0x0':    b'\x82\x3c\x00\x00',
    'CMP DWORD PTR [ebp+esi*1+0x24], 0x0': b'\x83\x7c\x35\x24\x00',
    'SUB esp, 0x58':                    b'\x83\xec\x58',
    'ADD esp, 0x8':                     b'\x83\xc4\x08',
    'TEST al, al':                      b'\x84\xc0',
    'TEST eax, eax':                    b'\x85\xc0',
    'XCHG al, al':                      b'\x86\xc0',
    'XCHG eax, eax':                    b'\x87\xc0',
    'MOV BYTE PTR [ebp+eax*1-0x114], al': b'\x88\x84\x05\xec\xfe\xff\xff',
    'MOV al, al':                       b'\x88\xc0',
    'MOV eax, eax':                     b'\x89\xc0',
    'MOV DWORD PTR [ebp-0x4], esi':     b'\x89\x75\xfc',
    'MOV DWORD PTR [ebp+esi*4+0x18], edi': b'\x89\x7c\xb5\x18',
    'MOV al, al':                       b'\x8a\xc0',
    'MOV eax, eax':                     b'\x8b\xc0',
    'MOV esi, DWORD PTR [eax*4+0x8f5a54]': b'\x8b\x34\x85\x54\x5a\x8f\x00',
    'MOV esi, DWORD PTR [ebp+esi*4+0x0]':  b'\x8b\x74\xb5\x00',
    'MOV WORD PTR [eax], es':           b'\x8c\x00',
    'MOV WORD PTR [eax], gs':           b'\x8c\x28',
    'LEA eax, [eax]':                   b'\x8d\x00',
    'LEA edi, [eax]':                   b'\x8d\x38',
    'LEA ebx, [edi*4+0xb626c8]':        b'\x8d\x1c\xbd\xc8\x26\xb6\x00',
    'MOV es, WORD PTR [eax]':           b'\x8e\x00',
    'MOV gs, WORD PTR [eax]':           b'\x8e\x28',
    'POP DWORD PTR [eax]':              b'\x8f\x00',
    'POP DWORD PTR [ecx]':              b'\x8f\x01',
    'POP DWORD PTR [edx]':              b'\x8f\x02',
    'POP DWORD PTR [ebx]':              b'\x8f\x03',
    'POP DWORD PTR [eax+eax*1]':        b'\x8f\x04\x00',
    'POP DWORD PTR ds:0x0':             b'\x8f\x05\x00\x00\x00\x00',
    'POP DWORD PTR [eax+0x0]':          b'\x8f\x40\x00',
    '(bad)':                            b'\x8f\x20',
    '(bad)':                            b'\x8f\x30',
    '(bad)':                            b'\x8f\x38',
    '(bad)':                            b'\x8f\x78',
    'POP eax':                          b'\x8f\xc0',
    'POP edi':                          b'\x8f\xc7',
    'NOP':                              b'\x90',
    'XCHG ecx, eax':                    b'\x91',
    'XCHG edx, eax':                    b'\x92',
    'XCHG ebx, eax':                    b'\x93',
    'XCHG esp, eax':                    b'\x94',
    'XCHG ebp, eax':                    b'\x95',
    'XCHG esi, eax':                    b'\x96',
    'XCHG edi, eax':                    b'\x97',
    'CWDE':                             b'\x98',
    'CDQ':                              b'\x99',
    'CALL 0x1234:0x7f000000':           b'\x9a\x00\x00\x00\x7f\x34\x12',
    'FWAIT':                            b'\x9b',
    'PUSHF':                            b'\x9c',
    'POPF':                             b'\x9d',
    'SAHF':                             b'\x9e',
    'LAHF':                             b'\x9f',
    'MOV al, ds:0x0':                   b'\xa0\x00\x00\x00\x00',
    'MOV al, ds:0x7fffffff':            b'\xa0\xff\xff\xff\x7f',
    'MOV al, ds:0x80000000':            b'\xa0\x00\x00\x00\x80',
    'MOV al, ds:0xffffffff':            b'\xa0\xff\xff\xff\xff',
    'MOV eax, ds:0x0':                  b'\xa1\x00\x00\x00\x00',
    'MOV eax, ds:0x7fffffff':           b'\xa1\xff\xff\xff\x7f',
    'MOV eax, ds:0x80000000':           b'\xa1\x00\x00\x00\x80',
    'MOV eax, ds:0xffffffff':           b'\xa1\xff\xff\xff\xff',
    'MOV ds:0x0, al':                   b'\xa2\x00\x00\x00\x00',
    'MOV ds:0x7fffffff, al':            b'\xa2\xff\xff\xff\x7f',
    'MOV ds:0x80000000, al':            b'\xa2\x00\x00\x00\x80',
    'MOV ds:0xffffffff, al':            b'\xa2\xff\xff\xff\xff',
    'MOV ds:0x0, eax':                  b'\xa3\x00\x00\x00\x00',
    'MOV ds:0x7fffffff, eax':           b'\xa3\xff\xff\xff\x7f',
    'MOV ds:0x80000000, eax':           b'\xa3\x00\x00\x00\x80',
    'MOV ds:0xffffffff, eax':           b'\xa3\xff\xff\xff\xff',
    'MOVS BYTE PTR es:[edi], BYTE PTR ds:[esi]':    b'\xa4',
    'MOVS DWORD PTR es:[edi], DWORD PTR ds:[esi]':  b'\xa5',
    'CMPS BYTE PTR ds:[esi], BYTE PTR es:[edi]':    b'\xa6',
    'CMPS DWORD PTR ds:[esi], DWORD PTR es:[edi]':  b'\xa7',
    'TEST al, 0x0':                     b'\xa8\x00',
    'TEST al, 0x7f':                    b'\xa8\x7f',
    'TEST al, 0x80':                    b'\xa8\x80',
    'TEST al, 0xff':                    b'\xa8\xff',
    'TEST eax, 0x0':                    b'\xa9\x00\x00\x00\x00',
    'TEST eax, 0x7fffffff':             b'\xa9\xff\xff\xff\x7f',
    'TEST eax, 0x80000000':             b'\xa9\x00\x00\x00\x80',
    'TEST eax, 0xffffffff':             b'\xa9\xff\xff\xff\xff',
    'STOS BYTE PTR es:[edi], al':       b'\xaa',
    'STOS DWORD PTR es:[edi], eax':     b'\xab',
    'LODS al, BYTE PTR ds:[esi]':       b'\xac',
    'LODS eax, DWORD PTR ds:[esi]':     b'\xad',
    'SCAS al, BYTE PTR ds:[edi]':       b'\xae',
    'SCAS eax, DWORD PTR ds:[edi]':     b'\xaf',
    'MOV al, 0x0':                      b'\xb0\x00',
    'MOV al, 0x7f':                     b'\xb0\x7f',
    'MOV al, 0x80':                     b'\xb0\x80',
    'MOV al, 0xff':                     b'\xb0\xff',
    'MOV cl, 0x0':                      b'\xb1\x00',
    'MOV cl, 0x7f':                     b'\xb1\x7f',
    'MOV cl, 0x80':                     b'\xb1\x80',
    'MOV cl, 0xff':                     b'\xb1\xff',
    'MOV dl, 0x0':                      b'\xb2\x00',
    'MOV dl, 0x7f':                     b'\xb2\x7f',
    'MOV dl, 0x80':                     b'\xb2\x80',
    'MOV dl, 0xff':                     b'\xb2\xff',
    'MOV bl, 0x0':                      b'\xb3\x00',
    'MOV bl, 0x7f':                     b'\xb3\x7f',
    'MOV bl, 0x80':                     b'\xb3\x80',
    'MOV bl, 0xff':                     b'\xb3\xff',
    'MOV ah, 0x0':                      b'\xb4\x00',
    'MOV ah, 0x7f':                     b'\xb4\x7f',
    'MOV ah, 0x80':                     b'\xb4\x80',
    'MOV ah, 0xff':                     b'\xb4\xff',
    'MOV ch, 0x0':                      b'\xb5\x00',
    'MOV ch, 0x7f':                     b'\xb5\x7f',
    'MOV ch, 0x80':                     b'\xb5\x80',
    'MOV ch, 0xff':                     b'\xb5\xff',
    'MOV dh, 0x0':                      b'\xb6\x00',
    'MOV dh, 0x7f':                     b'\xb6\x7f',
    'MOV dh, 0x80':                     b'\xb6\x80',
    'MOV dh, 0xff':                     b'\xb6\xff',
    'MOV bh, 0x0':                      b'\xb7\x00',
    'MOV bh, 0x7f':                     b'\xb7\x7f',
    'MOV bh, 0x80':                     b'\xb7\x80',
    'MOV bh, 0xff':                     b'\xb7\xff',
    'MOV eax, 0x0':                     b'\xb8\x00\x00\x00\x00',
    'MOV eax, 0x7fffffff':              b'\xb8\xff\xff\xff\x7f',
    'MOV eax, 0x80000000':              b'\xb8\x00\x00\x00\x80',
    'MOV eax, 0xffffffff':              b'\xb8\xff\xff\xff\xff',
    'MOV ecx, 0x0':                     b'\xb9\x00\x00\x00\x00',
    'MOV ecx, 0x7fffffff':              b'\xb9\xff\xff\xff\x7f',
    'MOV ecx, 0x80000000':              b'\xb9\x00\x00\x00\x80',
    'MOV ecx, 0xffffffff':              b'\xb9\xff\xff\xff\xff',
    'MOV edx, 0x0':                     b'\xba\x00\x00\x00\x00',
    'MOV edx, 0x7fffffff':              b'\xba\xff\xff\xff\x7f',
    'MOV edx, 0x80000000':              b'\xba\x00\x00\x00\x80',
    'MOV edx, 0xffffffff':              b'\xba\xff\xff\xff\xff',
    'MOV ebx, 0x0':                     b'\xbb\x00\x00\x00\x00',
    'MOV ebx, 0x7fffffff':              b'\xbb\xff\xff\xff\x7f',
    'MOV ebx, 0x80000000':              b'\xbb\x00\x00\x00\x80',
    'MOV ebx, 0xffffffff':              b'\xbb\xff\xff\xff\xff',
    'MOV esp, 0x0':                     b'\xbc\x00\x00\x00\x00',
    'MOV esp, 0x7fffffff':              b'\xbc\xff\xff\xff\x7f',
    'MOV esp, 0x80000000':              b'\xbc\x00\x00\x00\x80',
    'MOV esp, 0xffffffff':              b'\xbc\xff\xff\xff\xff',
    'MOV ebp, 0x0':                     b'\xbd\x00\x00\x00\x00',
    'MOV ebp, 0x7fffffff':              b'\xbd\xff\xff\xff\x7f',
    'MOV ebp, 0x80000000':              b'\xbd\x00\x00\x00\x80',
    'MOV ebp, 0xffffffff':              b'\xbd\xff\xff\xff\xff',
    'MOV esi, 0x0':                     b'\xbe\x00\x00\x00\x00',
    'MOV esi, 0x7fffffff':              b'\xbe\xff\xff\xff\x7f',
    'MOV esi, 0x80000000':              b'\xbe\x00\x00\x00\x80',
    'MOV esi, 0xffffffff':              b'\xbe\xff\xff\xff\xff',
    'MOV edi, 0x0':                     b'\xbf\x00\x00\x00\x00',
    'MOV edi, 0x7fffffff':              b'\xbf\xff\xff\xff\x7f',
    'MOV edi, 0x80000000':              b'\xbf\x00\x00\x00\x80',
    'MOV edi, 0xffffffff':              b'\xbf\xff\xff\xff\xff',
    'ROL BYTE PTR [eax], 0x0':          b'\xc0\x00\x00',
    'ROL DWORD PTR [eax], 0x0':         b'\xc1\x00\x00',
    'SHL DWORD PTR [esi], 0x63':        b'\xc1\x36\x63', # TODO: Reserved
    'RET 0x0':                          b'\xc2\x00\x00',
    'RET 0x7fff':                       b'\xc2\xff\x7f',
    'RET 0x8000':                       b'\xc2\x00\x80',
    'RET 0xffff':                       b'\xc2\xff\xff',
    'RET':                              b'\xc3',
    'LES eax, FWORD PTR [eax]':         b'\xc4\x00',
    'LDS eax, FWORD PTR [eax]':         b'\xc5\x00',
    'MOV BYTE PTR [eax], 0x0':          b'\xc6\x00\x00',
    'MOV BYTE PTR [ebp+eax*1-0x18], 0x1': b'\xc6\x44\x05\xe8\x01',
    '(bad)':                            b'\xc6\xdb',
    '(bad)':                            b'\xc6\xec',
    'MOV DWORD PTR [eax], 0x0':         b'\xc7\x00\x00\x00\x00\x00',
    'MOV DWORD PTR [eax], 0xffffffff':  b'\xc7\x00\xff\xff\xff\xff',
    'ENTER 0x0, 0x0':                   b'\xc8\x00\x00\x00',
    'ENTER 0x7fff, 0x0':                b'\xc8\xff\x7f\x00',
    'ENTER 0x8000, 0x0':                b'\xc8\x00\x80\x00',
    'ENTER 0xffff, 0x0':                b'\xc8\xff\xff\x00',
    'ENTER 0x0, 0xff':                  b'\xc8\x00\x00\xff',
    'ENTER 0x7fff, 0xff':               b'\xc8\xff\x7f\xff',
    'ENTER 0x8000, 0xff':               b'\xc8\x00\x80\xff',
    'ENTER 0xffff, 0xff':               b'\xc8\xff\xff\xff',
    'LEAVE':                            b'\xc9',
    'RETF 0x0':                         b'\xca\x00\x00',
    'RETF 0x7fff':                      b'\xca\xff\x7f',
    'RETF 0x8000':                      b'\xca\x00\x80',
    'RETF 0xffff':                      b'\xca\xff\xff',
    'RETF':                             b'\xcb',
    'INT3':                             b'\xcc',
    'INT 0x0':                          b'\xcd\x00',
    'INT 0x80':                         b'\xcd\x80',
    'INT 0xff':                         b'\xcd\xff',
    'INTO':                             b'\xce',
    'IRET':                             b'\xcf',

    'ROR BYTE PTR [ebp+0x468a007c], 1': b'\xd0\x8d\x7c\x00\x8a\x46',
    'SHR eax, 1':                       b'\xd1\xe8',
    'SHL bl, cl':                       b'\xd2\xe3',
    'SHR edx, cl':                      b'\xd3\xea',
    'SHL ebp, cl':                      b'\xd3\xf5', # RegOp: 110 which is reserved...
    'AAM 0x6d':                         b'\xd4\x6d',
    'AAD 0x6d':                         b'\xd5\x6d',
    'XLAT BYTE PTR ds:[ebx]':           b'\xd7',


    'FCOMP DWORD PTR ds:0x86e75c':      b'\xd8\x1d\x5c\xe7\x86\x00',
    'FADD DWORD PTR [eax+0x78]':        b'\xd8\x40\x78',
    'FCOM DWORD PTR [esp+0x6c]':        b'\xd8\x54\x24\x6c',
    'FSUB DWORD PTR [esp+0x6c]':        b'\xd8\x64\x24\x6c',
    'FSUBR DWORD PTR [esp+0x6c]':       b'\xd8\x6c\x24\x6c',
    'FDIV DWORD PTR [esp+0x8]':         b'\xd8\x74\x24\x08',
    'FDIVR DWORD PTR [esp+0x8]':        b'\xd8\x7c\x24\x08',
    'FADD st, st(1)':                   b'\xd8\xc1',

    'FMUL DWORD PTR ds:0x8f8de0':       b'\xd8\x0d\xe0\x8d\x8f\x00',
    'FMUL st, st(1)':                   b'\xd8\xc9',

    'FCOM st(1)':                       b'\xd8\xd1',
    'FCOMP st(1)':                      b'\xd8\xd9',
    'FSUB st, st(1)':                   b'\xd8\xe1',
    'FSUBR st, st(1)':                  b'\xd8\xe9',
    'FDIV st, st(0)':                   b'\xd8\xf0',
    'FDIVR st, st(0)':                  b'\xd8\xf8',

    '(bad)':                            b'\xd9\x0f',
    'FST DWORD PTR ds:0xb62f6c':        b'\xd9\x15\x6c\x2f\xb6\x00',
    'FLDENV [esp]':                     b'\xd9\x24\x24',
    'FNSTENV [esp]':                    b'\xd9\x34\x24',
    'FLD DWORD PTR [esp+0x8]':          b'\xd9\x44\x24\x08',
    'FSTP DWORD PTR [eax+0x78]':        b'\xd9\x58\x78',
    'FLDCW WORD PTR [ebp+0xc]':         b'\xd9\x6d\x0c',
    'FNSTCW WORD PTR [ebp-0x4]':        b'\xd9\x7d\xfc',
    'FXCH st(1)':                       b'\xd9\xc9',
    'FNOP':                             b'\xd9\xd0',
    'FCHS':                             b'\xd9\xe0',
    'FABS':                             b'\xd9\xe1',
    'FTST':                             b'\xd9\xe4',
    'FXAM':                             b'\xd9\xe5',
    'FLD1':                             b'\xd9\xe8',
    'FLDL2T':                           b'\xd9\xe9',
    'FLD12E':                           b'\xd9\xea',
    'FLDPI':                            b'\xd9\xeb',
    'FLDLG2':                           b'\xd9\xec',
    'FLDLN2':                           b'\xd9\xed',
    'FLDZ':                             b'\xd9\xee',
    'F2XM1':                            b'\xd9\xf0',
    'FY12X':                            b'\xd9\xf1',
    'FPTAN':                            b'\xd9\xf2',
    'FPATAN':                           b'\xd9\xf3',
    'FXTRACT':                          b'\xd9\xf4',
    'FPREM1':                           b'\xd9\xf5',
    'FDECSTP':                          b'\xd9\xf6',
    'FINCSTP':                          b'\xd9\xf7',
    'FPREM':                            b'\xd9\xf8',
    'FYL2XP1':                          b'\xd9\xf9',
    'FSQRT':                            b'\xd9\xfa',
    'FSINCOS':                          b'\xd9\xfb',
    'FRNDINT':                          b'\xd9\xfc',
    'FSCALE':                           b'\xd9\xfd',
    'FSIN':                             b'\xd9\xfe',
    'FCOS':                             b'\xd9\xff',

    'FIADD DWORD PTR [esp+0x14]':       b'\xda\x44\x24\x14',
    'FIMUL DWORD PTR [esp+0x14]':       b'\xda\x4c\x24\x14',
    'FICOM DWORD PTR [esp+0x14]':       b'\xda\x54\x24\x14',
    'FICOMP DWORD PTR [esp+0x14]':      b'\xda\x5c\x24\x14',
    'FISUB DWORD PTR [esp+0x14]':       b'\xda\x64\x24\x14',
    'FISUBR DWORD PTR [esp+0x14]':      b'\xda\x6c\x24\x14',
    'FIDIV DWORD PTR [esp+0x14]':       b'\xda\x74\x24\x14',
    'FIDIVR DWORD PTR [esp+0x14]':      b'\xda\x7c\x24\x14',
    'FCMOVB st, st(0)':                 b'\xda\xc0',
    'FCMOVE st, st(0)':                 b'\xda\xc8',
    'FCMOVBE st, st(4)':                b'\xda\xd4',
    'FCMOVU st, st(0)':                 b'\xda\xd8',
    'FUCOMPP':                          b'\xda\xe9',
    '(bad)':                            b'\xda\xec',

    'FLD TBYTE PTR ds:0x8f81c8':        b'\xdb\x2d\xc8\x81\x8f\x00',
    '(bad)':                            b'\xdb\x30',
    'FILD QWORD PTR [ebp+0xc]':         b'\xdb\x45\x0c',
    'FISTTP DWORD PTR [edx+0x0]':       b'\xdb\x4a\x00',
    'FIST DWORD PTR [edx+0x0]':         b'\xdb\x52\x00',
    'FISTP DWORD PTR [ebp+0x8]':        b'\xdb\x5d\x08',
    'FSTP TBYTE PTR [ebp-0x9e]':        b'\xdb\xbd\x62\xff\xff\xff',
    'FNCLEX':                           b'\xdb\xe2',
    'FNINIT':                           b'\xdb\xe3',

    'FADD QWORD PTR ds:0x895528':       b'\xdc\x05\x28\x55\x89\x00',
    'FMUL QWORD PTR [ebp-0x8]':         b'\xdc\x4d\xf8',
    'FCOM QWORD PTR [esi+0x20]':        b'\xdc\x56\x20',
    'FSUB QWORD PTR [esi+0x20]':        b'\xdc\x66\x20',
    'FSUBR QWORD PTR [ebp-0x10]':       b'\xdc\x6d\xf0',
    'FDIV QWORD PTR [ebp-0x8]':         b'\xdc\x75\xf8',
    'FDIVR QWORD PTR [esp+0x8]':        b'\xdc\x7c\x24\x08',
    'FADD st(1), st':                   b'\xdc\xc1',
    'FMUL st(1), st':                   b'\xdc\xc9',
    'FSUBR st(1), st':                  b'\xdc\xe1',
    'FSUB st(5), st':                   b'\xdc\xed',
    'FDIVR st(1), st':                  b'\xdc\xf1',
    'FDIV st(1), st':                   b'\xdc\xf9',

    'FST QWORD PTR [esp]':              b'\xdd\x14\x24',
    'FSTP QWORD PTR [esp]':             b'\xdd\x1c\x24',
    'FLD QWORD PTR [ebp-0x8]':          b'\xdd\x45\xf8',
    'FISTTP QWORD PTR [eax+0x0]':       b'\xdd\x48\x00',
    '(bad)':                            b'\xdd\x68\x00',
    'FRSTOR [esi+0x8]':                 b'\xdd\x66\x08',
    'FNSAVE [esi+0x8]':                 b'\xdd\x76\x08',
    'FNSTSW WORD PTR [ebp-0x4]':        b'\xdd\x7d\xfc',
    'FFREE st(0)':                      b'\xdd\xc0',
    'FST st(0)':                        b'\xdd\xd0',
    'FSTP st(1)':                       b'\xdd\xd9',
    'FUCOM st(0)':                      b'\xdd\xe0',
    'FUCOMP st(0)':                     b'\xdd\xe8',

    'FICOM WORD PTR [edi*2+0x7d14c800]':b'\xde\x14\x7d\x00\xc8\x14\x7d',
    'FIADD WORD PTR [edi+0x0]':         b'\xde\x47\x00',
    'FIMUL WORD PTR [edi+0x0]':         b'\xde\x4f\x00',
    'FICOM WORD PTR [edi+0x0]':         b'\xde\x57\x00',
    'FICOMP WORD PTR [edi+0x0]':        b'\xde\x5f\x00',
    'FISUB WORD PTR [edi+0x0]':         b'\xde\x67\x00',
    'FISUBR WORD PTR [edi+0x0]':        b'\xde\x6f\x00',
    'FIDIV WORD PTR [edi+0x0]':         b'\xde\x77\x00',
    'FIDIVR WORD PTR [edi+0x0]':        b'\xde\x7f\x00',
    'FADDP st(1), st':                  b'\xde\xc1',
    'FMULP st(1), st':                  b'\xde\xc9',
    '(bad)':                            b'\xde\xd0',
    'FCOMPP':                           b'\xde\xd9',
    'FSUBRP st(1), st':                 b'\xde\xe1',
    'FSUBP st(1), st':                  b'\xde\xe9',
    'FDIVRP st(1), st':                 b'\xde\xf1',
    'FDIVP st(1), st':                  b'\xde\xf9',

    'FILD WORD PTR [esp+0x8]':          b'\xdf\x44\x24\x08',
    'FISTTP WORD PTR [esp+0x8]':        b'\xdf\x4c\x24\x08',
    'FIST WORD PTR [esp+0x8]':          b'\xdf\x54\x24\x08',
    'FISTP WORD PTR [esp+0x8]':         b'\xdf\x5c\x24\x08',
    'FBLD TBYTE PTR [esp+0x8]':         b'\xdf\x64\x24\x08',
    'FILD QWORD PTR [esp+0x0]':         b'\xdf\x6c\x24\x00',
    'FBSTP TBYTE PTR [esp+0x8]':        b'\xdf\x74\x24\x08',
    'FISTP QWORD PTR [esp+0x8]':        b'\xdf\x7c\x24\x08',
    '(bad)':                            b'\xdf\xd2',
    'FUCOMIP st, st(0)':                b'\xdf\xe8',
    'FCOMIP st, st(0)':                 b'\xdf\xf0',

    'LOOPNE 0xffffffcd':                b'\xe0\xcb',
    'LOOPE 0xffffffcd':                 b'\xe1\xcb',
    'LOOP 0xffffffcd':                  b'\xe2\xcb',
    'JECXZ 0xffffffd1':                 b'\xe3\xcf',
    'IN al, 0x7f':                      b'\xe4\x7f',
    'IN eax, 0x7f':                     b'\xe5\x7f',
    'OUT 0x8b, al':                     b'\xe6\x8b',
    'OUT 0x8b, eax':                    b'\xe7\x8b',
    'CALL 0x23d1':                      b'\xe8\xcc\x23\x00\x00',
    'JMP 0xffe8:0x45f76175':            b'\xea\x75\x61\xf7\x45\xe8\xff',
    'JMP 0x5':                          b'\xeb\x03',
    'IN al, dx':                        b'\xec',
    'IN eax, dx':                       b'\xed',
    'OUT dx, al':                       b'\xee',
    'OUT dx, eax':                      b'\xef',

    'INT1':                             b'\xf1',
    'repe (bad)':                       b'\xf3\xd6',
    'HLT':                              b'\xf4',
    'CMC':                              b'\xf5',

    'TEST BYTE PTR [eax], 0x0':         b'\xf6\x00\x00',
    'NOT BYTE PTR [eax]':               b'\xf6\x10',
    'NEG BYTE PTR [eax]':               b'\xf6\x18',
    'MUL BYTE PTR [eax]':               b'\xf6\x20',
    'IMUL BYTE PTR [eax]':              b'\xf6\x28',
    'DIV BYTE PTR [eax]':               b'\xf6\x30',
    'IDIV BYTE PTR [eax]':              b'\xf6\x38',
    'TEST BYTE PTR [eax+0x0], 0x0':     b'\xf6\x40\x00\x00',
    'TEST BYTE PTR [ebp-0x30], 0x1':    b'\xf6\x45\xd0\x01',
    'TEST BYTE PTR [ecx+0x0], 0x33':    b'\xf6\x49\x00\x33', # TODO: Undefined!!!
    'NOT BYTE PTR [eax+0x0]':           b'\xf6\x50\x00',
    'NEG BYTE PTR [eax+0x0]':           b'\xf6\x58\x00',
    'MUL BYTE PTR [eax+0x0]':           b'\xf6\x60\x00',
    'IMUL BYTE PTR [eax+0x0]':          b'\xf6\x68\x00',
    'DIV BYTE PTR [eax+0x0]':           b'\xf6\x70\x00',
    'IDIV BYTE PTR [eax+0x0]':          b'\xf6\x78\x00',
    'TEST BYTE PTR [eax+0x0], 0x0':     b'\xf6\x80\x00\x00\x00\x00\x00',
    'NOT BYTE PTR [eax+0x0]':           b'\xf6\x90\x00\x00\x00\x00',
    'NEG BYTE PTR [eax+0x0]':           b'\xf6\x98\x00\x00\x00\x00',
    'MUL BYTE PTR [eax+0x0]':           b'\xf6\xa0\x00\x00\x00\x00',
    'IMUL BYTE PTR [eax+0x0]':          b'\xf6\xa8\x00\x00\x00\x00',
    'DIV BYTE PTR [eax+0x0]':           b'\xf6\xb0\x00\x00\x00\x00',
    'IDIV BYTE PTR [eax+0x0]':          b'\xf6\xb8\x00\x00\x00\x00',
    'TEST al, 0x0':                     b'\xf6\xc0\x00',
    'NOT al':                           b'\xf6\xd0',
    'NEG al':                           b'\xf6\xd8',
    'MUL al':                           b'\xf6\xe0',
    'IMUL al':                          b'\xf6\xe8',
    'DIV al':                           b'\xf6\xf0',
    'IDIV al':                          b'\xf6\xf8',

    'TEST DWORD PTR [eax], 0x0':        b'\xf7\x00\x00\x00\x00\x00',
    'NOT DWORD PTR [eax]':              b'\xf7\x10',
    'NEG DWORD PTR [eax]':              b'\xf7\x18',
    'MUL DWORD PTR [eax]':              b'\xf7\x20',
    'IMUL DWORD PTR [eax]':             b'\xf7\x28',
    'DIV DWORD PTR [eax]':              b'\xf7\x30',
    'IDIV DWORD PTR [eax]':             b'\xf7\x38',
    'TEST DWORD PTR [eax+0x0], 0x0':    b'\xf7\x40\x00\x00\x00\x00\x00',
    'TEST DWORD PTR [ecx+0x0], 0x49f733': b'\xf7\x49\x00\x33\xf7\x49\x00', # TODO: Unedinfed!!
    'NOT DWORD PTR [eax+0x0]':          b'\xf7\x50\x00',
    'NEG DWORD PTR [eax+0x0]':          b'\xf7\x58\x00',
    'MUL DWORD PTR [eax+0x0]':          b'\xf7\x60\x00',
    'IMUL DWORD PTR [eax+0x0]':         b'\xf7\x68\x00',
    'DIV DWORD PTR [eax+0x0]':          b'\xf7\x70\x00',
    'IDIV DWORD PTR [eax+0x0]':         b'\xf7\x78\x00',
    'TEST DWORD PTR [eax+0x0], 0x0':    b'\xf7\x80\x00\x00\x00\x00\x00\x00\x00\x00',
    'NOT DWORD PTR [eax+0x0]':          b'\xf7\x90\x00\x00\x00\x00',
    'NEG DWORD PTR [eax+0x0]':          b'\xf7\x98\x00\x00\x00\x00',
    'MUL DWORD PTR [eax+0x0]':          b'\xf7\xa0\x00\x00\x00\x00',
    'IMUL DWORD PTR [eax+0x0]':         b'\xf7\xa8\x00\x00\x00\x00',
    'DIV DWORD PTR [eax+0x0]':          b'\xf7\xb0\x00\x00\x00\x00',
    'IDIV DWORD PTR [eax+0x0]':         b'\xf7\xb8\x00\x00\x00\x00',
    'TEST eax, 0x0':                    b'\xf7\xc0\x00\x00\x00\x00',
    'NOT eax':                          b'\xf7\xd0',
    'NEG eax':                          b'\xf7\xd8',
    'MUL eax':                          b'\xf7\xe0',
    'IMUL eax':                         b'\xf7\xe8',
    'DIV eax':                          b'\xf7\xf0',
    'IDIV eax':                         b'\xf7\xf8',

    'CLC':                              b'\xf8',
    'STC':                              b'\xf9',
    'CLI':                              b'\xfa',
    'STI':                              b'\xfb',
    'CLD':                              b'\xfc',
    'STD':                              b'\xfd',
    '(bad)':                            b'\xfe\x22',
    'INC BYTE PTR [eax]':               b'\xfe\x00',
    'INC BYTE PTR [ecx]':               b'\xfe\x01',
    'INC BYTE PTR [edx]':               b'\xfe\x02',
    'INC BYTE PTR [ebx]':               b'\xfe\x03',
    'INC BYTE PTR [eax+eax*1]':         b'\xfe\x04\x00',
    'INC DWORD PTR [eax]':              b'\xff\x00',
    'INC DWORD PTR [ecx]':              b'\xff\x01',
    'INC DWORD PTR [edx]':              b'\xff\x02',
    'INC DWORD PTR [ebx]':              b'\xff\x03',
    'INC DWORD PTR [eax+eax*1]':        b'\xff\x04\x00',
    'DEC DWORD PTR [eax]':              b'\xff\x08',
    'DEC DWORD PTR [ecx]':              b'\xff\x09',
    'DEC DWORD PTR [edx]':              b'\xff\x0a',
    'DEC DWORD PTR [ebx]':              b'\xff\x0b',
    'DEC DWORD PTR [eax+eax*1]':        b'\xff\x0c\x00',
    '(bad)':                            b'\xfe\x12',
    # TODO: CALL, far CALL, JMP, far JMP
    'PUSH DWORD PTR [eax]':             b'\xff\x30',
    'PUSH DWORD PTR [ebp+edx*4-0x14]':  b'\xff\x74\x95\xec',
    'INC DWORD PTR [ebp+eax*4-0x13c]':  b'\xff\x84\x85\xc4\xfe\xff\xff',


    # 2-byte Opcodes
    'PREFETCHW BYTE PTR ds:0xd0d0d0d':  b'\x0f\x0d\x0d\x0d\x0d\x0d\x0d',
    'SGDTD [ecx]':                      b'\x0f\x01\x01',
    'LAR ebp, WORD PTR [eax+0x0]':      b'\x0f\x02\x68\x00',
    'LSL ebp, WORD PTR [eax+0x0]':      b'\x0f\x03\x68\x00',
    'SYSCALL':                          b'\x0f\x05',
    'CLTS':                             b'\x0f\x06',
    'SYSRET':                           b'\x0f\x07',
    'INVD':                             b'\x0f\x08',
    'WBINVD':                           b'\x0f\x09',

    # AMD's 3DNow!
    'FEMMS':                            b'\x0f\x0e', # 3DNow!

    'PI2FD mm0, mm0':                   b'\x0f\x0f\xc0\x0d',
    'PF2ID mm0, mm0':                   b'\x0f\x0f\xc0\x1d',
    'PFNACC mm0, mm0':                  b'\x0f\x0f\xc0\x8a',
    'PFPNACC mm0, mm0':                 b'\x0f\x0f\xc0\x8e',
    'PFCMPGE mm0, mm0':                 b'\x0f\x0f\xc0\x90',
    'PFMIN mm0, mm0':                   b'\x0f\x0f\xc0\x94',
    'PFRCP mm0, mm0':                   b'\x0f\x0f\xc0\x96',
    'PFRSQRT mm0, mm0':                 b'\x0f\x0f\xc0\x97',
    'PFSUB mm4, mm5':                   b'\x0f\x0f\xe5\x9a',
    'PFADD mm0, mm2':                   b'\x0f\x0f\xc2\x9e',
    'PFCMPGT mm0, mm0':                 b'\x0f\x0f\xc0\xa0',
    'PFMAX mm0, mm0':                   b'\x0f\x0f\xc0\xa4',
    'PFRCPIT1 mm0, mm0':                b'\x0f\x0f\xc0\xa6',
    'PFRSQIT1 mm0, mm0':                b'\x0f\x0f\xc0\xa7',
    'PFSUBR mm0, mm0':                  b'\x0f\x0f\xc0\xaa',
    'PFACC mm0, mm0':                   b'\x0f\x0f\xc0\xae',

    'PFCMPEQ mm0, mm0':                 b'\x0f\x0f\xc0\xb0',
    'PFMUL mm1, QWORD PTR [ebx]':       b'\x0f\x0f\x0b\xb4',
    'PFMUL mm1, QWORD PTR [ebx+0xa]':   b'\x0f\x0f\x4b\x0a\xb4',
    'PFMUL mm1, QWORD PTR [ebx+eax*4+0xa]': b'\x0f\x0f\x4c\x83\x0a\xb4',
    'PFMUL mm0, mm0':                   b'\x0f\x0f\xc0\xb4',
    'PFMUL mm6, mm6':                   b'\x0f\x0f\xf6\xb4',

    'PFRCPIT2 mm0, mm0':                b'\x0f\x0f\xc0\xb6',
    'PMULHRW mm0, mm0':                 b'\x0f\x0f\xc0\xb7',
    'PSWAPD mm0, mm0':                  b'\x0f\x0f\xc0\xbb',
    'PAVGUSB mm0, mm0':                 b'\x0f\x0f\xc0\xbf',

    'MOVUPS xmm2, XMMWORD PTR [ecx]':   b'\x0f\x10\x11',
    'MOVUPS XMMWORD PTR [eax], xmm0':   b'\x0f\x11\x00',
    'MOVLPS xmm1, QWORD PTR [eax]':     b'\x0f\x12\x08',
    'MOVLPS QWORD PTR [edx], xmm1':     b'\x0f\x13\x0a',
    'UNPCKHPS xmm1, xmm0':              b'\x0f\x15\xc8',
    'UNPCKLPS xmm1, xmm0':              b'\x0f\x14\xc8',
    'MOVHPS xmm1, QWORD PTR [ecx]':     b'\x0f\x16\x09',
    'MOVHPS QWORD PTR [edx+0x8], xmm1': b'\x0f\x17\x4a\x08',
    'MOVAPS xmm1, XMMWORD PTR [esp+0x0]': b'\x0f\x28\x4c\x24\x00',
    'MOVAPS xmm0, xmm1':                b'\x0f\x28\xc1',
    'MOVAPS XMMWORD PTR [esp+0x0], xmm0': b'\x0f\x29\x44\x24\x00',
    'MOVAPS XMMWORD PTR [esp+0xa0], xmm0': b'\x0f\x29\x84\x24\xa0\x00\x00\x00',
    'CVTPI2PS xmm2, QWORD PTR [eax]':   b'\x0f\x2a\x10',
    'MOVNTPS XMMWORD PTR [eax], xmm0':  b'\x0f\x2b\x00',
    'CVTTPS2PI mm0, xmm0':              b'\x0f\x2c\xc0',
    'CVTPS2PI mm0, xmm0':               b'\x0f\x2d\xc0',
    'UCOMISS xmm0, xmm0':               b'\x0f\x2e\xc0',
    'COMISS xmm0, xmm0':                b'\x0f\x2f\xc0',
    'WRMSR':                            b'\x0f\x30',
    'RDTSC':                            b'\x0f\x31',
    'RDMSR':                            b'\x0f\x32',
    'RDPMC':                            b'\x0f\x33',
    'SYSENTER':                         b'\x0f\x34',
    'SYSEXIT':                          b'\x0f\x35',
    'GETSEC':                           b'\x0f\x37',

    'CMOVO eax, DWORD PTR [eax]':       b'\x0f\x40\x00',
    'CMOVNO eax, DWORD PTR [eax]':      b'\x0f\x41\x00',
    'CMOVB eax, DWORD PTR [eax]':       b'\x0f\x42\x00',
    'CMOVAE eax, DWORD PTR [eax]':      b'\x0f\x43\x00',
    'CMOVE eax, DWORD PTR [eax]':       b'\x0f\x44\x00',
    'CMOVNE eax, DWORD PTR [eax]':      b'\x0f\x45\x00',
    'CMOVBE eax, DWORD PTR [eax]':      b'\x0f\x46\x00',
    'CMOVA eax, DWORD PTR [eax]':       b'\x0f\x47\x00',
    'CMOVS eax, DWORD PTR [eax]':       b'\x0f\x48\x00',
    'CMOVNS eax, DWORD PTR [eax]':      b'\x0f\x49\x00',
    'CMOVP eax, DWORD PTR [eax]':       b'\x0f\x4a\x00',
    'CMOVNP eax, DWORD PTR [eax]':      b'\x0f\x4b\x00',
    'CMOVL eax, DWORD PTR [eax]':       b'\x0f\x4c\x00',
    'CMOVGE eax, DWORD PTR [eax]':      b'\x0f\x4d\x00',
    'CMOVLE eax, DWORD PTR [eax]':      b'\x0f\x4e\x00',
    'CMOVG eax, DWORD PTR [eax]':       b'\x0f\x4f\x00',

    'MOVMSKPS edx, xmm0':               b'\x0f\x50\xd0',
    'SQRTPS xmm2, xmm0':                b'\x0f\x51\xd0',
    'RSQRTPS xmm2, xmm0':               b'\x0f\x52\xd0',
    'RCPPS xmm2, xmm0':                 b'\x0f\x53\xd0',
    'ANDPS xmm3, XMMWORD PTR ds:0x8eb3f0': b'\x0f\x54\x1d\xf0\xb3\x8e\x00',
    'ANDNPS xmm2, xmm5':                b'\x0f\x55\xd5',
    'ORPS xmm0, xmm2':                  b'\x0f\x56\xc2',
    'ADDPS xmm1, XMMWORD PTR [esp+0x120]': b'\x0f\x58\x8c\x24\x20\x01\x00\x00',
    'XORPS xmm2, xmm2':                 b'\x0f\x57\xd2',
    'ADDPS xmm0, xmm2':                 b'\x0f\x58\xc2',
    'MULPS xmm1, XMMWORD PTR [esp+0xa0]': b'\x0f\x59\x8c\x24\xa0\x00\x00\x00',
    'MULPS xmm0, xmm1':                 b'\x0f\x59\xc1',
    'CVTPS2PD xmm0, xmm2':              b'\x0f\x5a\xc2',
    'CVTDQ2PS xmm0, xmm2':              b'\x0f\x5b\xc2',
    'SUBPS xmm3, xmm6':                 b'\x0f\x5c\xde',
    'MINPS xmm0, xmm2':                 b'\x0f\x5d\xc2',
    'DIVPS xmm0, xmm2':                 b'\x0f\x5e\xc2',
    'MAXPS xmm0, xmm2':                 b'\x0f\x5f\xc2',
    'PUNPCKLBW mm3, mm3':               b'\x0f\x60\xdb',
    'PUNPCKLWD mm3, mm3':               b'\x0f\x61\xdb',
    'PUNPCKLDQ mm5, mm3':               b'\x0f\x62\xeb',
    'PACKSSWB mm6, mm6':                b'\x0f\x63\xf6',
    'PCMPGTB mm6, mm6':                 b'\x0f\x64\xf6',
    'PCMPGTW mm6, mm6':                 b'\x0f\x65\xf6',
    'PCMPGTD mm6, mm6':                 b'\x0f\x66\xf6',
    'PACKUSWB mm0, mm4':                b'\x0f\x67\xc4',
    'PUNPCKHBW mm1, QWORD PTR [ebp-0x10]': b'\x0f\x68\x4d\xf0',
    'PUNPCKHWD mm1, mm7':               b'\x0f\x69\xcf',
    'PACKSSDW mm6, mm7':                b'\x0f\x6b\xf7',
    'MOVD mm3, DWORD PTR [ecx+0x8]':    b'\x0f\x6e\x59\x08',
    'MOVQ mm6, QWORD PTR ds:0x8e99b0':  b'\x0f\x6f\x35\xb0\x99\x8e\x00',
    'MOVQ mm5, QWORD PTR [esp+0x10]':   b'\x0f\x6f\x6c\x24\x10',
    'PSRLW mm1, 0x8':                   b'\x0f\x71\xd1\x08',
    'PSLLD mm3, 0x1e':                  b'\x0f\x72\xf3\x1e',
    'PSLLQ mm7, 0x20':                  b'\x0f\x73\xf7\x20',
    'PCMPEQB mm3, mm7':                 b'\x0f\x74\xdf',
    'PCMPEQW mm3, mm7':                 b'\x0f\x75\xdf',
    'PCMPEQD mm3, mm7':                 b'\x0f\x76\xdf',
    'EMMS':                             b'\x0f\x77',
    '(bad)':                            b'\x0f\x7b',
    'MOVD DWORD PTR [edx+0x8], mm0':    b'\x0f\x7e\x42\x08',
    'MOVQ QWORD PTR [eax+0x38], mm3':   b'\x0f\x7f\x58\x38',

    'JE 0x1dc':                         b'\x0f\x84\xd6\x01\x00\x00',
    'SETNE cl':                         b'\x0f\x95\xc1',

    'PUSH fs':                          b'\x0f\xa0',
    'POP fs':                           b'\x0f\xa1',
    'CPUID':                            b'\x0f\xa2',
    'BT DWORD PTR [esp], eax':          b'\x0f\xa3\x04\x24',
    'SHLD eax, ecx, 0xb':               b'\x0f\xa4\xc8\x0b',
    'SHLD edx, eax, cl':                b'\x0f\xa5\xc2',
    'PUSH gs':                          b'\x0f\xa8',
    'POP gs':                           b'\x0f\xa9',
    'RSM':                              b'\x0f\xaa',
    'BTS DWORD PTR [esp], eax':         b'\x0f\xab\x04\x24',
    'SHRD ecx, edx, 0x10':              b'\x0f\xac\xd1\x10',
    'SHRD eax, edx, cl':                b'\x0f\xad\xd0',

    'IMUL esi, DWORD PTR [ebp+0x10]':   b'\x0f\xaf\x75\x10',

    'MOVZX ecx, BYTE PTR [esi]':        b'\x0f\xb6\x0e',
    'MOVZX ecx, al':                    b'\x0f\xb6\xc8',
    'MOVZX eax, BYTE PTR [ebp-0x4]':    b'\x0f\xb6\x45\xfc',
    'MOVZX esi, BYTE PTR [ecx+ebx*1+0x8]': b'\x0f\xb6\x74\x19\x08',
    'MOVZX eax, WORD PTR [eax*2+0x8f7eaa]': b'\x0f\xb7\x04\x45\xaa\x7e\x8f\x00',
    'MOVZX eax, WORD PTR ds:0xb62608':  b'\x0f\xb7\x05\x08\x26\xb6\x00',
    'MOVZX eax, WORD PTR [ebp-0x2c]':   b'\x0f\xb7\x45\xd4',
    'BTC DWORD PTR [edi+0x0], 0xf3':    b'\x0f\xba\x7f\x00\xf3',
    'MOVSX eax, BYTE PTR [esi]':        b'\x0f\xbe\x06',
    'MOVSX ecx, BYTE PTR [ebp+ecx*1-0x64]': b'\x0f\xbe\x4c\x0d\x9c',
    'MOVSX eax, BYTE PTR [esi+eax*8+0x895688]': b'\x0f\xbe\x84\xc6\x88\x56\x89\x00',
    'MOVSX eax, WORD PTR [eax]':        b'\x0f\xbf\x00',

    # MMX Instructions
    'CMPLTPS xmm3, xmm2':               b'\x0f\xc2\xda\x01',
    'BSWAP ebx':                        b'\x0f\xcb',

    '(bad)':                            b'\x0f\xd0\x7f',
    'PSRLW mm1, mm3':                   b'\x0f\xd1\xcb',
    'PSRLD mm1, mm3':                   b'\x0f\xd2\xcb',
    'PSRLQ mm1, mm3':                   b'\x0f\xd3\xcb',
    'PADDQ mm1, mm3':                   b'\x0f\xd4\xcb',
    'PMULLW mm1, mm3':                  b'\x0f\xd5\xcb',
    'PMOVMSKB ecx, mm3':                b'\x0f\xd7\xcb',
    'PAND mm3, QWORD PTR ds:0x8eb3d0':  b'\x0f\xdb\x1d\xd0\xb3\x8e\x00',
    'PAND mm1, mm5':                    b'\x0f\xdb\xcd',
    'PAND mm6, mm0':                    b'\x0f\xdb\xf0',
    'PADDUSB mm3, QWORD PTR ds:0x8e9990':b'\x0f\xdc\x1d\x90\x99\x8e\x00',
    'PADDUSW mm3, QWORD PTR ds:0x8e9990':b'\x0f\xdd\x1d\x90\x99\x8e\x00',
    'PMAXUB mm3, QWORD PTR ds:0x8e9990':b'\x0f\xde\x1d\x90\x99\x8e\x00',
    'PANDN mm3, QWORD PTR ds:0x8e9990': b'\x0f\xdf\x1d\x90\x99\x8e\x00',

    'PAVGB mm0, mm7':                   b'\x0f\xe0\xc7',
    'PSRAW mm0, mm7':                   b'\x0f\xe1\xc7',
    'PSRAD mm0, mm7':                   b'\x0f\xe2\xc7',
    'PAVGW mm0, mm7':                   b'\x0f\xe3\xc7',
    'PMULHUW mm0, mm7':                 b'\x0f\xe4\xc7',
    'PMULHW mm0, mm7':                  b'\x0f\xe5\xc7',
    'PSUBSB mm0, mm7':                  b'\x0f\xe8\xc7',
    'PSUBSW mm0, mm7':                  b'\x0f\xe9\xc7',
    'PMINSW mm6, QWORD PTR ds:0x8e99d0':b'\x0f\xea\x35\xd0\x99\x8e\x00',
    'POR mm2, mm7':                     b'\x0f\xeb\xd7',
    'PADDSB mm6, QWORD PTR ds:0x8e99d0':b'\x0f\xec\x35\xd0\x99\x8e\x00',
    'PADDSW mm6, QWORD PTR ds:0x8e99d0':b'\x0f\xed\x35\xd0\x99\x8e\x00',
    'PMAXSW mm6, QWORD PTR ds:0x8e99d0':b'\x0f\xee\x35\xd0\x99\x8e\x00',
    'PXOR mm6, mm6':                    b'\x0f\xef\xf6',

    'PSLLW mm4, mm6':                   b'\x0f\xf1\xe6',
    'PSLLD mm4, mm6':                   b'\x0f\xf2\xe6',
    'PSLLQ mm4, mm6':                   b'\x0f\xf3\xe6',
    'PMULUDQ mm4, mm6':                 b'\x0f\xf4\xe6',
    'PMADDWD mm4, mm6':                 b'\x0f\xf5\xe6',
    'PSADBW mm4, mm6':                  b'\x0f\xf6\xe6',
    'MASKMOVQ mm4, mm6':                b'\x0f\xf7\xe6',
    'PSUBB mm4, mm6':                   b'\x0f\xf8\xe6',
    'PSUBW mm4, mm6':                   b'\x0f\xf9\xe6',
    'PSUBD mm3, mm0':                   b'\x0f\xfa\xd8',
    'PSUBQ mm1, mm5':                   b'\x0f\xfb\xcd',
    'PADDB mm1, mm5':                   b'\x0f\xfc\xcd',
    'PADDW mm3, mm1':                   b'\x0f\xfd\xd9',
    'PADDD mm7, mm0':                   b'\x0f\xfe\xf8',
}

def hexlify(raw):
    return ''.join(map(lambda x: '\\x' + x, raw.hex(' ').split()))

def test_disassemble():
    for inst in instructions:
        raw = instructions[inst]
        state = {}
        try:
            actual = disassemble(raw, state)
            if actual != inst:
                print(f'[ERROR] Unexpected disassembly for bytes: {raw.hex(" ")}')
                print(f'  Expected: {inst}')
                print(f'  But got:  {actual}')
                sys.exit(1)
            if '(bad)' in inst:
                pass
            elif state['eip'] != len(raw):
                print(f'[ERROR] Unexpected eip after disassembly of bytes: {raw.hex(" ")}')
                print(f'  Expected: {len(raw)} ({inst})')
                print(f'  But got:  {state["eip"]} ({actual})')
                sys.exit(1)
        except Exception as e:
            print(f'[ERROR] Exception thrown on disassembly for bytes: {raw.hex(" ")}')
            print(f'  Expected: {inst}')
            print(traceback.format_exc())
            sys.exit(1)

def test_tokenize():
    cases = [
        ['NOP',         [ident('NOP')]],
        ['MOV eax, 1',  [ident('MOV'), ident('eax'), symbol(','), literal('1')]],
        ['INT 0x80',    [ident('INT'), literal('0x80')]],
    ]
    for line, expected in cases:
        actual = tokenize(line)
        if actual != expected:
            print(f'[ERROR] Unexpected tokens for line: {line}')
            print(f'  Expected: {expected}')
            print(f'  But got:  {actual}')
            sys.exit(1)

def test_assemble():
    cases = [
        ['AAA',                             b'\x37'],
        ['AAD',                             b'\xd5\x0a'],
        ['AAD 0x42',                        b'\xd5\x42'],
        ['AAM',                             b'\xd4\x0a'],
        ['AAM 0x42',                        b'\xd4\x42'],
        ['AAS',                             b'\x3f'],
        ['ADC BYTE PTR [eax], al',          b'\x10\x00'],
        ['ADC DWORD PTR [eax], eax',        b'\x11\x00'],
        ['ADC al, BYTE PTR [ecx]',          b'\x12\x01'],
        ['ADC eax, DWORD PTR [ecx]',        b'\x13\x01'],
        ['ADC al, 0x1',                     b'\x14\x01'],
        ['ADC eax, 0x240069d0',             b'\x15\xd0\x69\x00\x24'],
        ['ADC BYTE PTR [ecx], 0x1',         b'\x80\x11\x01'],
        ['ADC DWORD PTR [ecx], 0x2000',     b'\x81\x11\x00\x20\x00\x00'],
        ['ADC DWORD PTR [ecx], 0x1',        b'\x83\x11\x01'],

        ['ADD BYTE PTR [ecx], al',          b'\x00\x01'],
        ['ADD BYTE PTR ds:0x130040f6, al',  b'\x00\x05\xf6\x40\x00\x13'],
        ['ADD BYTE PTR ds:0xa50042ae, dl',  b'\x00\x15\xae\x42\x00\xa5'],
        ['ADD BYTE PTR [eax+edx*8], bl',    b'\x00\x1c\xd0'],
        ['ADD BYTE PTR [ebx+0x43], bl',     b'\x00\x5b\x43'],
        ['ADD BYTE PTR [edx-0x1], ch',      b'\x00\x6a\xff'],
        ['ADD BYTE PTR [esi+eax*8+0x42], ch',b'\x00\x6c\xc6\x42'],
        ['ADD BYTE PTR [ebx-0x7efbdbb4], cl',b'\x00\x8b\x4c\x24\x04\x81'],
        ['ADD BYTE PTR [ebp+0x50002444], cl',b'\x00\x8d\x44\x24\x00\x50'],
        ['ADD BYTE PTR [ecx-0x56ffbfbe], ch',b'\x00\xa9\x42\x40\x00\xa9'],
        ['ADD BYTE PTR [esi+0x24004040], ch',b'\x00\xae\x40\x40\x00\x24'],
        ['ADD BYTE PTR [esi+esi*4-0x491fffbe], ah', b'\x00\xa4\xb6\x42\x00\xe0\xb6'],
        ['ADD BYTE PTR [eax+esi*4-0x4efbffbe], dh', b'\x00\xb4\xb0\x42\x00\x04\xb1'],
        ['ADD bl, al',                      b'\x00\xc3'],
        ['ADD al, ah',                      b'\x00\xe0'],
        ['ADD DWORD PTR [ecx], eax',        b'\x01\x01'],
        ['ADD DWORD PTR [edx+0x18], ebp',   b'\x01\x6a\x18'],
        ['ADD DWORD PTR [eax-0x746f6f70], edx', b'\x01\x90\x90\x90\x90\x8b'],
        ['ADD al, BYTE PTR [ecx]',          b'\x02\x01'],
        ['ADD eax, DWORD PTR [ecx]',        b'\x03\x01'],
        ['ADD ecx, edx',                    b'\x03\xca'],
        ['ADD al, 0x1',                     b'\x04\x01'],
        ['ADD eax, 0x2000',                 b'\x05\x00\x20\x00\x00'],
        ['ADD BYTE PTR [eax], 0x1',         b'\x80\x00\x01'],
        ['ADD DWORD PTR [eax], 0x2000',     b'\x81\x00\x00\x20\x00\x00'],
        ['ADD edi, 0x8cbbec',               b'\x81\xc7\xec\xbb\x8c\x00'],
        ['ADD DWORD PTR [eax], 0x1',        b'\x83\x00\x01'],
        ['ADD DWORD PTR [esi+0x4], 0x20',   b'\x83\x46\x04\x20'],
        ['ADD DWORD PTR [ebp+0x80], 0xffffffd4', b'\x83\x85\x80\x00\x00\x00\xd4'],
        ['ADD eax, 0x4',                    b'\x83\xc0\x04'],
        ['ADD eax, 0xfffffffe',             b'\x83\xc0\xfe'],

        ['ADDPD xmm0, xmm2',                b'\x66\x0f\x58\xc2'],
        ['ADDSS xmm0, DWORD PTR ds:0x8e9a30',b'\xf3\x0f\x58\x05\x30\x9a\x8e\x00'],
        ['ADDSS xmm4, xmm5',                b'\xf3\x0f\x58\xe5'],

        ['ADDR16 ADD ah, bh',               b'\x67\x00\xfc'],

        ['AND BYTE PTR [ecx], al',          b'\x20\x01'],
        ['AND DWORD PTR [ecx], eax',        b'\x21\x01'],
        ['AND ecx, edx',                    b'\x23\xca'],
        ['AND al, BYTE PTR [ecx]',          b'\x22\x01'],
        ['AND eax, DWORD PTR [ecx]',        b'\x23\x01'],
        ['AND al, 0x1',                     b'\x24\x01'],
        ['AND eax, 0x2000',                 b'\x25\x00\x20\x00\x00'],
        ['AND BYTE PTR [eax], 0x1',         b'\x80\x20\x01'],
        ['AND DWORD PTR [eax], 0x2000',     b'\x81\x20\x00\x20\x00\x00'],
        ['AND ecx, 0xff',                   b'\x81\xe1\xff\x00\x00\x00'],
        ['AND DWORD PTR [eax], 0x1',        b'\x83\x20\x01'],
        ['AND eax, 0x4',                    b'\x83\xe0\x04'],
        ['AND esi, 0xfffffff8',             b'\x83\xe6\xf8'],

        ['ANDNPS xmm4, xmm0',               b'\x0f\x55\xe0'],
        ['ANDNPS xmm5, xmm3',               b'\x0f\x55\xeb'],
        ['ANDPD xmm0, XMMWORD PTR ds:0x889b00', b'\x66\x0f\x54\x05\x00\x9b\x88\x00'],
        ['ANDPS xmm0, XMMWORD PTR [esp+0x10]',b'\x0f\x54\x44\x24\x10'],
        ['ANDPS xmm2, XMMWORD PTR ds:0x889a00]',b'\x0f\x54\x15\x00\x9a\x88\x00'],
        ['ANDPS xmm0, xmm2',                b'\x0f\x54\xc2'],
        ['ARPL WORD PTR [eax], ax',         b'\x63\x00'],
        ['ARPL WORD PTR [esi+0x0], sp',     b'\x63\x66\x00'],
        ['ARPL WORD PTR ss:[eax], ax',      b'\x36\x63\x00'],
        ['ARPL WORD PTR [ecx+0x7f], ax',    b'\x63\x41\x7f'],
        ['ARPL sp, cx',                     b'\x63\xcc'],
        ['ARPL di, bx',                     b'\x63\xdf'],
        ['ARPL WORD PTR [bp+0x0], sp',      b'\x67\x63\x66\x00'],
        ['ARPL WORD PTR [eax+eax*1+0x14], bp',b'\x63\x6c\x00\x14'],
        ['ARPL WORD PTR [eax+eax*1-0x70], bp',b'\x63\x6c\x00\x90'],
        #['BND js 0x4a821d',                 b'\xf2\x78\x4a'],
        #['BND jg 0x7ff4d8',                 b'\xf2\x7f\x00'],
        ['BOUND eax, QWORD PTR [eax]',      b'\x62\x00'],
        ['BOUND ebp, QWORD PTR [edx]',      b'\x62\x2a'],
        #['BOUND edx, QWORD PTR [eax+0x0]',  b'\x62\x53\x00'],
        ['BOUND ebp, QWORD PTR [eax+eax*1+0x7]', b'\x62\x6c\x00\x07'],
        ['BOUND ebp, QWORD PTR [eax+eax*1-0x6]', b'\x62\x6c\x00\xfa'],
        ['BOUND ebp, QWORD PTR [eax+eax*1-0x13]',b'\x62\x6c\x00\xed'],
        ['BOUND esi, QWORD PTR [eax+0x44]', b'\x62\x70\x44'],
        ['BSWAP ebx',                       b'\x0f\xcb'],
        ['BT DWORD PTR [esp], eax',         b'\x0f\xa3\x04\x24'],
        ['BTC DWORD PTR [edi+0x0], 0xf3',   b'\x0f\xba\x7f\x00\xf3'],
        ['BTS DWORD PTR [esp], eax',        b'\x0f\xab\x04\x24'],

        ['CALL 0x4a89:0xf3004a89',          b'\x9a\x89\x4a\x00\xf3\x89\x4a'],
        ['CALL 0x66cc:0xfd0066ca',          b'\x9a\xca\x66\x00\xfd\xcc\x66'],
        #['CALL 0xe98711cb',                 b'\xe8\x49\x00\x3d\xe9'],
        ['CALL 0x7b6',                      b'\xe8\xb1\x07\x00\x00'],
        ['CALL 0x23d1',                     b'\xe8\xcc\x23\x00\x00'],
        #['CALL 0xfffffb92',                 b'\xe8\x8d\xfb\xff\xff'],
        ['CALL DWORD PTR [eax]',            b'\xff\x10'],
        ['CALL DWORD PTR [eax*4+0x896d38]', b'\xff\x14\x85\x38\x6d\x89\x00'],
        ['CALL DWORD PTR ds:0x86e2d8',      b'\xff\x15\xd8\xe2\x86\x00'],
        ['CALL DWORD PTR [esp+0x18]',       b'\xff\x54\x24\x18'],
        ['CALL DWORD PTR [ebp+edx*4+0x30]', b'\xff\x54\x95\x30'],
        ['CALL DWORD PTR [esi+edx*4+0x74]', b'\xff\x54\x96\x74'],
        ['CALL DWORD PTR [ebp-0x4]',        b'\xff\x55\xfc'],
        ['CALL DWORD PTR [edi+0x20]',       b'\xff\x57\x20'],
        ['CALL DWORD PTR [edx+0x84]',       b'\xff\x92\x84\x00\x00\x00'],
        ['CALL DWORD PTR [ecx+eax*4-0x370]',b'\xff\x94\x81\x90\xfc\xff\xff'],
        ['CALL DWORD PTR [edx+eax*4-0x360]',b'\xff\x94\x82\xa0\xfc\xff\xff'],
        ['CALL DWORD PTR [esi+eax*4+0x88]', b'\xff\x94\x86\x88\x00\x00\x00'],
        ['CALL DWORD PTR [edi-0x6a0bff9c]', b'\xff\x97\x64\x00\xf4\x95'],
        ['CALL ebx',                        b'\xff\xd3'],
        ['CWDE',                            b'\x98'],
        ['CDQ',                             b'\x99'],
        ['CLAC',                            b'\x0f\x01\xca'],
        ['CLC',                             b'\xf8'],
        ['CLD',                             b'\xfc'],
        #['CLDEMOTE BYTE PTR [eax]',         b'\x0f\x1c\x00'],
        ['CLI',                             b'\xfa'],
        ['CMC',                             b'\xf5'],
        ['CMOVA ecx, eax',                  b'\x0f\x47\xc8'],
        ['CMOVB edx, ecx',                  b'\x0f\x42\xd1'],
        ['CMOVE ecx, eax',                  b'\x0f\x44\xc8'],
        ['CMOVE edx, eax',                  b'\x0f\x44\xd0'],
        ['CMOVP eax, DWORD PTR [eax]',      b'\x0f\x4a\x00'],
        ['CMP BYTE PTR ds:0x9081c8, bl',    b'\x38\x1d\xc8\x81\x90\x00'],
        ['CMP BYTE PTR [eax], dh',          b'\x38\x30'],
        ['CMP BYTE PTR [esp+0x54], bl',     b'\x38\x5c\x24\x54'],
        ['CMP BYTE PTR [esp+0x90], bl',     b'\x38\x9c\x24\x90\x00\x00\x00'],
        ['CMP DWORD PTR [eax], edx',        b'\x39\x10'],
        ['CMP DWORD PTR [eax+ecx*4], esi',  b'\x39\x34\x88'],
        ['CMP DWORD PTR ds:0xb57a88, edi',  b'\x39\x3d\x88\x7a\xb5\x00'],
        ['CMP DWORD PTR [eax+0x4], ebx',    b'\x39\x58\x04'],
        ['CMP DWORD PTR [esp+0x24], edi',   b'\x39\x7c\x24\x24'],
        ['CMP DWORD PTR [esi+0xe0], edi',   b'\x39\xbe\xe0\x00\x00\x00'],
        ['CMP al, bl',                      b'\x3a\xc3'],
        ['CMP eax, DWORD PTR [edx]',        b'\x3b\x02'],
        ['CMP ebp, DWORD PTR [esi]',        b'\x3b\x2e'],
        ['CMP eax, DWORD PTR [esp+0x18]',   b'\x3b\x44\x24\x18'],
        ['CMP edx, DWORD PTR [eax+0xc]',    b'\x3b\x50\x0c'],
        ['CMP ebx, DWORD PTR [ebp+0x80]',   b'\x3b\x9d\x80\x00\x00\x00'],
        ['CMP eax, ecx',                    b'\x3b\xc1'],
        ['CMP al, 0x2',                     b'\x3c\x02'],
        ['CMP eax, 0x80',                   b'\x3d\x80\x00\x00\x00'],
        ['CMP BYTE PTR [ecx+0x2], 0x1',     b'\x80\x79\x02\x01'],
        ['CMP dl, 0x20',                    b'\x80\xfa\x20'],
        ['CMP DWORD PTR [edx+0x4], 0x100',  b'\x81\x7a\x04\x00\x01\x00\x00'],
        ['CMP esi, 0x80',                   b'\x81\xfe\x80\x00\x00\x00'],
        ['CMP DWORD PTR [edx+ecx*4], 0x0',  b'\x83\x3c\x8a\x00'],
        ['CMP DWORD PTR [edi], 0x1',        b'\x83\x3f\x01'],
        ['CMP DWORD PTR [esp+0x14], 0x2',   b'\x83\x7c\x24\x14\x02'],
        ['CMP DWORD PTR [ebp+0x0], 0x0',    b'\x83\x7d\x00\x00'],
        ['CMP DWORD PTR [ebp+0x330], 0x1',  b'\x83\xbd\x30\x03\x00\x00\x01'],
        ['CMP eax, 0x1',                    b'\x83\xf8\x01'],
        ['CMP eax, 0xffffffff',             b'\x83\xf8\xff'],
        ['CMP esi, 0xfffffffe',             b'\x83\xfe\xfe'],
        ['CMPLEPS xmm1, xmm0',              b'\x0f\xc2\xc8\x02'],
        ['CMPLEPS xmm6, xmm7',              b'\x0f\xc2\xf7\x02'],
        ['CMPLEPS xmm7, XMMWORD PTR ds:0x8eb0e0', b'\x0f\xc2\x3d\xe0\xb0\x8e\x00\x02'],
        ['CMPLTPS xmm2, xmm3',              b'\x0f\xc2\xd3\x01'],
        ['CMPLTPS xmm3, xmm4',              b'\x0f\xc2\xdc\x01'],
        ['CMPLTPS xmm1, XMMWORD PTR ds:0x889af0', b'\x0f\xc2\x0d\xf0\x9a\x88\x00\x01'],
        ['CMPLTPS xmm3, XMMWORD PTR ds:0x889af0', b'\x0f\xc2\x1d\xf0\x9a\x88\x00\x01'],
        ['CMPLTSS xmm3, xmm2',              b'\xf3\x0f\xc2\xda\x01'],
        ['CMPNEQPS xmm0, xmm1',             b'\x0f\xc2\xc1\x04'],
        ['CMPNLEPS xmm0, XMMWORD PTR [esp+0x1a0]', b'\x0f\xc2\x84\x24\xa0\x01\x00\x00\x06'],
        ['CMPNLEPS xmm1, XMMWORD PTR [esp+0x1a0]', b'\x0f\xc2\x8c\x24\xa0\x01\x00\x00\x06'],
        ['CMPNLEPS xmm0, xmm3',             b'\x0f\xc2\xc3\x06'],
        ['CMPNLTPS xmm0, XMMWORD PTR ds:0x889ae0', b'\x0f\xc2\x05\xe0\x9a\x88\x00\x05'],
        ['CMPNLTPS xmm2, XMMWORD PTR ds:0x889ae0', b'\x0f\xc2\x15\xe0\x9a\x88\x00\x05'],
        ['CMPS DWORD PTR ds:[esi], DWORD PTR es:[edi]', b'\xa7'],
        ['COMISS xmm5, DWORD PTR ds:0xb548a8', b'\x0f\x2f\x2d\xa8\x48\xb5\x00'],
        ['COMISS xmm0, xmm2',               b'\x0f\x2f\xc2'],
        ['COMISS xmm1, xmm0',               b'\x0f\x2f\xc8'],
        ['CPUID',                           b'\x0f\xa2'],
        ['CVTDQ2PS xmm0, xmm2',             b'\x0f\x5b\xc2'],
        ['CVTDQ2PS xmm2, xmm7',             b'\x0f\x5b\xd7'],
        ['CVTPD2PS xmm2, xmm0',             b'\x66\x0f\x5a\xd0'],
        ['CVTPI2PS xmm2, QWORD PTR [eax]',  b'\x0f\x2a\x10'],
        ['CVTPI2PS xmm3, QWORD PTR ds:0x21201f1e', b'\x0f\x2a\x1d\x1e\x1f\x20\x21'],
        ['CVTPI2PS xmm0, mm2',              b'\x0f\x2a\xc2'],
        ['CVTPS2PD xmm0, xmm0',             b'\x0f\x5a\xc0'],
        ['CVTPS2PI mm3, xmm7',              b'\x0f\x2d\xdf'],
        ['CVTSI2SS xmm0, ecx',              b'\xf3\x0f\x2a\xc1'],
        ['CVTTSS2SI eax, xmm0',             b'\xf3\x0f\x2c\xc0'],
        ['DAA',                             b'\x27'],
        ['DAS',                             b'\x2f'],
        ['DATA16 ADD BYTE PTR [edi+edx*1+0x17b50066], ch', b'\x66\x00\xac\x17\x66\x00\xb5\x17'],
        ['DATA16 ADD BYTE PTR [ebx*2+0x5d640066], ch', b'\x66\x00\x2c\x5d\x66\x00\x64\x5d'],
        ['DATA16 ADD BYTE PTR ss:[eax], dl',b'\x36\x66\x00\x10'],
        ['DATA16 ADD BYTE PTR ss:[esi], bl',b'\x36\x66\x00\x1e'],
        ['DATA16 TEST BYTE PTR [eax], al',  b'\x66\x84\x00'],
        ['DEC eax',                         b'\x48'],
        ['DIV bh',                          b'\xf6\xf7'],
        ['DIV DWORD PTR ds:0xb62cdc',       b'\xf7\x35\xdc\x2c\xb6\x00'],
        ['DIV DWORD PTR [esp+0x1c]',        b'\xf7\x74\x24\x1c'],
        ['DIV DWORD PTR [esp+0x28]',        b'\xf7\x74\x24\x28'],
        ['DIV DWORD PTR [ebp+0x60]',        b'\xf7\x75\x60'],
        ['DIV DWORD PTR [ebp-0x14]',        b'\xf7\x75\xec'],
        ['DIV DWORD PTR [edi+0x30]',        b'\xf7\x77\x30'],
        ['DIV DWORD PTR [esi+0x1060]',      b'\xf7\xb6\x60\x10\x00\x00'],
        ['DIV edi',                         b'\xf7\xf7'],
        #['DS LOOP 0x49e688',                b'\x3e\xe2\x49'],
        ['EMMS',                            b'\x0f\x77'],
        ['ENTER 0x42, 0x15',                b'\xc8\x42\x00\x15'],
        ['ENTER 0x73, 0x0',                 b'\xc8\x73\x00\x00'],
        ['ES SBB al, 0x6b',                 b'\x26\x1c\x6b'],
        ['ES IN eax, dx',                   b'\x26\xed'],
        ['F2XM1',                           b'\xd9\xf0'],
        ['FABS',                            b'\xd9\xe1'],
        ['FADD DWORD PTR [eax*4+0xb52df8]', b'\xd8\x04\x85\xf8\x2d\xb5\x00'],
        ['FADD DWORD PTR [ebp+ecx*1-0x160]',b'\xd8\x84\x0d\xa0\xfe\xff\xff'],
        ['FADD DWORD PTR [esi+0xd4]',       b'\xd8\x86\xd4\x00\x00\x00'],
        ['FADD st(0), st',                  b'\xdc\xc0'],
        ['FBLD TBYTE PTR [ebp-0x5909ffad]', b'\xdf\xa5\x53\x00\xf6\xa6'],
        ['FCHS',                            b'\xd9\xe0'],
        ['FCLEX',                           b'\x9b\xdb\xe2'],
        ['FCMOVBE st, st(4)',               b'\xda\xd4'],
        ['FCMOVE st, st(4)',                b'\xda\xcc'],
        ['FNCLEX',                          b'\xdb\xe2'],
        ['FCOM DWORD PTR [edx]',            b'\xd8\x12'],
        ['FCOM DWORD PTR [eax+edx*4]',      b'\xd8\x14\x90'],
        ['FCOM DWORD PTR ds:0x86e708',      b'\xd8\x15\x08\xe7\x86\x00'],
        ['FCOM DWORD PTR [esp+0x4]',        b'\xd8\x54\x24\x04'],
        ['FCOM DWORD PTR [ebp-0x8]',        b'\xd8\x55\xf8'],
        ['FCOM DWORD PTR [edi+0x10]',       b'\xd8\x57\x10'],
        ['FCOM DWORD PTR [ecx+0xb8]',       b'\xd8\x91\xb8\x00\x00\x00'],
        ['FCOM DWORD PTR [esi+0x310]',      b'\xd8\x96\x10\x03\x00\x00'],
        ['FCOM st(5)',                      b'\xd8\xd5'],
        ['FCOM QWORD PTR [ecx+edi*1]',      b'\xdc\x14\x39'],
        ['FCOM QWORD PTR ds:0x87a778',      b'\xdc\x15\x78\xa7\x87\x00'],
        ['FCOMPP',                          b'\xde\xd9'],
        ['FCOS',                            b'\xd9\xff'],
        ['FDECSTP',                         b'\xd9\xf6'],
        ['FDIV DWORD PTR ds:0x8f9bf0',      b'\xd8\x35\xf0\x9b\x8f\x00'],
        ['FDIV DWORD PTR [esp+0x8]',        b'\xd8\x74\x24\x08'],
        ['FDIV DWORD PTR [ebp-0x4]',        b'\xd8\x75\xfc'],
        ['FDIV DWORD PTR [esi+0x8]',        b'\xd8\x76\x08'],
        ['FDIV DWORD PTR [ebx+0x334]',      b'\xd8\xb3\x34\x03\x00\x00'],
        ['FDIV DWORD PTR [esp+0xc4]',       b'\xd8\xb4\x24\xc4\x00\x00\x00'],
        ['FDIV DWORD PTR [esi+0x2e8]',      b'\xd8\xb6\xe8\x02\x00\x00'],
        ['FDIV st, st(1)',                  b'\xd8\xf1'],
        ['FDIV QWORD PTR [ecx]',            b'\xdc\x31'],
        ['FDIVP st(1), st',                 b'\xde\xf9'],
        ['FDIVR DWORD PTR ds:0x874290',     b'\xd8\x3d\x90\x42\x87\x00'],
        ['FDIVR DWORD PTR [ecx+0x34]',      b'\xd8\x79\x34'],
        ['FDIVR DWORD PTR [ebp+0x18]',      b'\xd8\x7d\x18'],
        ['FDIVR DWORD PTR [esp+0x10]',      b'\xd8\x7c\x24\x10'],
        ['FDIVR DWORD PTR [esp+0xc0]',      b'\xd8\xbc\x24\xc0\x00\x00\x00'],
        ['FDIVR DWORD PTR [esi+0x9c]',      b'\xd8\xbe\x9c\x00\x00\x00'],
        ['FDIVR st, st(1)',                 b'\xd8\xf9'],
        ['FDIVR QWORD PTR ds:0x86f310',     b'\xdc\x3d\x10\xf3\x86\x00'],
        ['FDIVR QWORD PTR [esp+0x8]',       b'\xdc\x7c\x24\x08'],
        ['FDIVR QWORD PTR [edi+0x0]',       b'\xdc\x7f\x00'],
        ['FDIVRP st(0), st',                b'\xde\xf0'],
        ['FDIVRP st(1), st',                b'\xde\xf1'],
        ['FEMMS',                           b'\x0f\x0e'],
        ['FIADD DWORD PTR [ebx]',           b'\xda\x03'],
        ['FIADD DWORD PTR ds:0xb575bc',     b'\xda\x05\xbc\x75\xb5\x00'],
        ['FIADD DWORD PTR [esp+0x4]',       b'\xda\x44\x24\x04'],
        ['FIADD DWORD PTR [esp+0x10]',      b'\xda\x44\x24\x10'],
        ['FIADD DWORD PTR [esi+0x50]',      b'\xda\x46\x50'],
        ['FIADD DWORD PTR [esi+0x2e4]',     b'\xda\x86\xe4\x02\x00\x00'],
        ['FIADD WORD PTR [ebx+0x0]',        b'\xde\x43\x00'],
        ['FICOM DWORD PTR [edx+0x0]',       b'\xda\x52\x00'],
        ['FICOM DWORD PTR [ebx+0x64]',      b'\xda\x53\x64'],
        ['FICOM WORD PTR [edi*2+0x7d14c800]', b'\xde\x14\x7d\x00\xc8\x14\x7d'],
        ['FICOM WORD PTR [edx+0x0]',        b'\xde\x52\x00'],
        ['FICOM DWORD PTR ds:[edx+0x0]',    b'\x3e\xda\x52\x00'],
        ['FIDIV DWORD PTR [ecx*4+0x874d88]',b'\xda\x34\x8d\x88\x4d\x87\x00'],
        ['FIDIV DWORD PTR [esi]',           b'\xda\x36'],
        ['FIDIV DWORD PTR [ecx+eax*1+0x8]', b'\xda\x74\x01\x08'],
        ['FIDIV DWORD PTR [ecx+edi*1+0x8]', b'\xda\x74\x39\x08'],
        ['FIDIV DWORD PTR [esp+0x10]',      b'\xda\x74\x24\x10'],
        ['FIDIV DWORD PTR [esp+0x18]',      b'\xda\x74\x24\x18'],
        ['FIDIV DWORD PTR [esp+0x84]',      b'\xda\xb4\x24\x84\x00\x00\x00'],
        ['FIDIV DWORD PTR [edi+0x28]',      b'\xda\x77\x28'],
        ['FIDIVR WORD PTR [edi+0x0]',       b'\xde\x7f\x00'],
        ['FIMUL DWORD PTR [edx+0x0]',       b'\xda\x4a\x00'],
        ['FIMUL DWORD PTR [esp+0x14]',      b'\xda\x4c\x24\x14'],
        ['FIMUL DWORD PTR [esp+0x1c]',      b'\xda\x4c\x24\x1c'],
        ['FIMUL DWORD PTR [ebp+0x32c]',     b'\xda\x8d\x2c\x03\x00\x00'],
        ['FIMUL WORD PTR [edx+0x0]',        b'\xde\x4a\x00'],
        ['FINCSTP',                         b'\xd9\xf7'],
        ['FINIT',                           b'\x9b\xdb\xe3'],
        ['FIST DWORD PTR [edx+0x0]',        b'\xdb\x52\x00'],

        ['FISTP DWORD PTR [esp+0x0]',       b'\xdb\x5c\x24\x00'],
        ['FISTP DWORD PTR [ebp+0x14]',      b'\xdb\x5d\x14'],
        ['FISTP DWORD PTR [ebp-0x14]',      b'\xdb\x5d\xec'],
        ['FISTP QWORD PTR [edx+0x0]',       b'\xdf\x7a\x00'],
        ['FISTP QWORD PTR [ebp-0xc]',       b'\xdf\x7d\xf4'],

        ['FISTTP DWORD PTR [edx+0x0]',      b'\xdb\x4a\x00'],
        ['FISTTP QWORD PTR [eax+0x0]',      b'\xdd\x48\x00'],
        ['FISTTP QWORD PTR [edx+0x0]',      b'\xdd\x4a\x00'],
        ['FISTTP WORD PTR [ecx]',           b'\xdf\x09'],
        ['FISUB DWORD PTR [edi]',           b'\xda\x27'],
        ['FISUB DWORD PTR [ecx+0x0]',       b'\xda\x61\x00'],
        ['FISUB DWORD PTR [esi+0x0]',       b'\xda\x66\x00'],
        ['FISUB DWORD PTR [ebp-0x4]',       b'\xda\x65\xfc'],
        ['FISUB DWORD PTR [esp+0x4]',       b'\xda\x64\x24\x04'],
        ['FISUB DWORD PTR [esp+0x34]',      b'\xda\x64\x24\x34'],
        ['FISUB DWORD PTR [esi+0x31e8]',    b'\xda\xa6\xe8\x31\x00\x00'],
        ['FISUB DWORD PTR [esi+0x31f4]',    b'\xda\xa6\xf4\x31\x00\x00'],
        ['FISUBR DWORD PTR [ecx+0x0]',      b'\xda\x69\x00'],

        ['FLD DWORD PTR [edx]',             b'\xd9\x02'],
        ['FLD DWORD PTR [esp]',             b'\xd9\x04\x24'],
        ['FLD DWORD PTR [eax+edx*8]',       b'\xd9\x04\xd0'],
        ['FLD DWORD PTR [edx+ebx*8]',       b'\xd9\x04\xda'],
        ['FLD DWORD PTR [eax*4+0x8e5fb8]',  b'\xd9\x04\x85\xb8\x5f\x8e\x00'],
        ['FLD DWORD PTR [ebp*4+0x8e5490]',  b'\xd9\x04\xad\x90\x54\x8e\x00'],
        ['FLD DWORD PTR ds:0xb62f6c',       b'\xd9\x05\x6c\x2f\xb6\x00'],
        ['FLD DWORD PTR [edi]',             b'\xd9\x07'],
        ['FLD DWORD PTR [eax-0x18]',        b'\xd9\x40\xe8'],
        ['FLD DWORD PTR [eax-0x4]',         b'\xd9\x40\xfc'],
        ['FLD DWORD PTR [edx+0xc]',         b'\xd9\x42\x0c'],
        ['FLD DWORD PTR [edx-0x4]',         b'\xd9\x42\xfc'],
        ['FLD DWORD PTR [eax+ecx*1-0x4]',   b'\xd9\x44\x08\xfc'],
        ['FLD DWORD PTR [esp+0x4]',         b'\xd9\x44\x24\x04'],
        ['FLD DWORD PTR [esp+0x10]',        b'\xd9\x44\x24\x10'],
        ['FLD DWORD PTR [ecx+eax*8-0x4]',   b'\xd9\x44\xc1\xfc'],
        ['FLD DWORD PTR [ebx+ecx*8+0x8]',   b'\xd9\x44\xcb\x08'],
        ['FLD DWORD PTR [ecx-0x5a8]',       b'\xd9\x81\x58\xfa\xff\xff'],
        ['FLD DWORD PTR [esp+0xf0]',        b'\xd9\x84\x24\xf0\x00\x00\x00'],
        ['FLD DWORD PTR [esi+eax*4+0x12048]',b'\xd9\x84\x86\x48\x20\x01\x00'],
        ['FLD DWORD PTR [ebp-0xac]',        b'\xd9\x85\x54\xff\xff\xff'],
        ['FLD DWORD PTR [esi+0xdc]',        b'\xd9\x86\xdc\x00\x00\x00'],
        ['FLD st(1)',                       b'\xd9\xc1'],
        ['FLD TBYTE PTR [esp]',             b'\xdb\x2c\x24'],
        ['FLD TBYTE PTR ds:0x8f81e0',       b'\xdb\x2d\xe0\x81\x8f\x00'],
        ['FLD TBYTE PTR gs:[ecx+0x0]',      b'\x65\xdb\x69\x00'],
        ['FLD TBYTE PTR [ecx+0x0]',         b'\xdb\x69\x00'],
        ['FLD TBYTE PTR [esp+0x10]',        b'\xdb\x6c\x24\x10'],
        ['FLD TBYTE PTR [ebp-0xa]',         b'\xdb\x6d\xf6'],
        ['FLD TBYTE PTR [ebp-0x9e]',        b'\xdb\xad\x62\xff\xff\xff'],
        ['FLD QWORD PTR ds:0x874700',       b'\xdd\x05\x00\x47\x87\x00'],
        ['FLD QWORD PTR [ebx+0x0]',         b'\xdd\x43\x00'],
        ['FLD QWORD PTR [ebp-0x20]',        b'\xdd\x45\xe0'],
        ['FLD QWORD PTR [ebp+eax*8-0xc10]', b'\xdd\x84\xc5\xf0\xf3\xff\xff'],
        ['FLD1',                            b'\xd9\xe8'],
        ['FLDCW WORD PTR [edx]',            b'\xd9\x2a'],
        ['FLDCW WORD PTR [ecx+0x0]',        b'\xd9\x69\x00'],
        ['FLDCW WORD PTR [esp+0x4]',        b'\xd9\x6c\x24\x04'],
        #['FLDCW WORD PTR [esp+0x1c]',       b'\x9b\xd9\x6c\x24\x1c'],
        ['FLDCW WORD PTR [ebp-0xc]',        b'\xd9\x6d\xf4'],
        ['FLDCW WORD PTR [ebp-0xa2]',       b'\xd9\xad\x5e\xff\xff\xff'],
        ['FLDENV [edx]',                    b'\xd9\x22'],
        ['FLDENV [esp]',                    b'\xd9\x24\x24'],
        ['FLDL2E',                          b'\xd9\xea'],
        ['FLDLG2',                          b'\xd9\xec'],
        ['FLDLN2',                          b'\xd9\xed'],
        ['FLDPI',                           b'\xd9\xeb'],

        ['FMUL DWORD PTR [eax]',            b'\xd8\x08'],
        ['FMUL DWORD PTR ds:0x86e734',      b'\xd8\x0d\x34\xe7\x86\x00'],
        ['FMUL DWORD PTR [eax-0x4]',        b'\xd8\x48\xfc'],
        ['FMUL DWORD PTR [esi+edx*4+0x4]',  b'\xd8\x4c\x96\x04'],
        ['FMUL DWORD PTR [ecx-0x90]',       b'\xd8\x89\x70\xff\xff\xff'],
        ['FMUL DWORD PTR [esp+0x124]',      b'\xd8\x8c\x24\x24\x01\x00\x00'],
        ['FMUL st, st(1)',                  b'\xd8\xc9'],
        ['FMUL QWORD PTR ds:0x86fd50',      b'\xdc\x0d\x50\xfd\x86\x00'],
        ['FMULP st(1), st',                 b'\xde\xc9'],

        ['FNINIT',                          b'\xdb\xe3'],
        ['FNOP',                            b'\xd9\xd0'],
        ['FNSTCW WORD PTR [eax+0x69]',      b'\xd9\x78\x69'],
        ['FNSTCW WORD PTR [esp+0x0]',       b'\xd9\x7c\x24\x00'],
        ['FNSTCW WORD PTR [esp+0x1c]',      b'\xd9\x7c\x24\x1c'],
        ['FNSTCW WORD PTR [ebp+0x4]',       b'\xd9\x7d\x04'],
        ['FNSTCW WORD PTR [ebp-0x8]',       b'\xd9\x7d\xf8'],
        ['FNSTENV [esp]',                   b'\xd9\x34\x24'],
        ['FPATAN',                          b'\xd9\xf3'],
        ['FPREM',                           b'\xd9\xf8'],
        ['FPREM1',                          b'\xd9\xf5'],
        ['FPTAN',                           b'\xd9\xf2'],
        ['FRNDINT',                         b'\xd9\xfc'],
        ['FFREE st(0)',                     b'\xdd\xc0'],
        ['FRSTOR [ecx+0x8]',                b'\xdd\x61\x08'],
        ['FRSTOR [esi+0x0]',                b'\xdd\x66\x00'],
        ['FS DEC ebx',                      b'\x64\x4b'],
        ['FSAVE [ecx+0x8]',                 b'\x9b\xdd\x71\x08'],
        ['FSAVE [esi+0x8]',                 b'\x9b\xdd\x76\x08'],
        ['FSCALE',                          b'\xd9\xfd'],
        ['FSIN',                            b'\xd9\xfe'],
        ['FSINCOS',                         b'\xd9\xfb'],
        ['FSQRT',                           b'\xd9\xfa'],
        ['FSTCW WORD PTR [esp]',            b'\x9b\xd9\x3c\x24'],
        ['FSTCW WORD PTR [ebp-0x4]',        b'\x9b\xd9\x7d\xfc'],
        ['FSTCW WORD PTR [ebp-0x2]',        b'\x9b\xd9\x7d\xfe'],
        ['FSTCW WORD PTR [ebp-0xa4]',       b'\x9b\xd9\xbd\x5c\xff\xff\xff'],
        ['FSTP DWORD PTR [eax]',            b'\xd9\x18'],
        ['FSTP DWORD PTR [edx+eax*1]',      b'\xd9\x1c\x02'],
        ['FSTP DWORD PTR [esp]',            b'\xd9\x1c\x24'],
        ['FSTP DWORD PTR [eax*4+0xb52da4]', b'\xd9\x1c\x85\xa4\x2d\xb5\x00'],
        ['FSTP DWORD PTR ds:0x8da2a8',      b'\xd9\x1d\xa8\xa2\x8d\x00'],
        ['FSTP DWORD PTR [eax-0x4]',        b'\xd9\x58\xfc'],
        ['FSTP DWORD PTR [esp+0x10]',       b'\xd9\x5c\x24\x10'],
        ['FSTP DWORD PTR [ecx+eax*4+0x4]',  b'\xd9\x5c\x81\x04'],
        ['FSTP DWORD PTR [esi+0xd4]',       b'\xd9\x9e\xd4\x00\x00\x00'],
        ['FSTP st(0)',                      b'\xdd\xd8'],
        ['FSTSW WORD PTR [ebp-0x4]',        b'\x9b\xdd\x7d\xfc'],
        ['FSTSW WORD PTR [ebp-0x2]',        b'\x9b\xdd\x7d\xfe'],
        ['FSTSW WORD PTR [ebp-0xa0]',       b'\x9b\xdd\xbd\x60\xff\xff\xff'],
        ['FSTSW ax',                        b'\x9b\xdf\xe0'],
        #['FSTSW ax',                        b'\x9b\x9b\xdf\xe0'],
        ['FSUB DWORD PTR [ecx*4+0x903174]', b'\xd8\x24\x8d\x74\x31\x90\x00'],
        ['FSUBR DWORD PTR ds:0x8777e8',     b'\xd8\x2d\xe8\x77\x87\x00'],
        ['FSUBR DWORD PTR [esi]',           b'\xd8\x2e'],
        ['FSUBR DWORD PTR [ebp-0x4]',       b'\xd8\x6d\xfc'],
        ['FSUBR DWORD PTR [esi+0x4]',       b'\xd8\x6e\x04'],
        ['FSUBR DWORD PTR [esp+0x20]',      b'\xd8\x6c\x24\x20'],
        ['FSUBR DWORD PTR [esp+0x88]',      b'\xd8\xac\x24\x88\x00\x00\x00'],
        ['FSUBR DWORD PTR [esi+0x2c8]',     b'\xd8\xae\xc8\x02\x00\x00'],
        ['FSUBR QWORD PTR fs:[ecx+0x0]',    b'\x64\xdc\x69\x00'],
        ['FSUBR QWORD PTR ds:0x874700',     b'\xdc\x2d\x00\x47\x87\x00'],
        ['FSUBRP st(1), st',                b'\xde\xe1'],
        ['FSUBRP st(3), st',                b'\xde\xe3'],
        ['FTST',                            b'\xd9\xe4'],
        ['FUCOMP st(6)',                    b'\xdd\xee'],
        ['FXAM',                            b'\xd9\xe5'],
        ['FYL2X',                           b'\xd9\xf1'],
        ['FYL2XP1',                         b'\xd9\xf9'],
        ['FWAIT',                           b'\x9b'],
        ['GS TEST BYTE PTR gs:[eax], al',   b'\x65\x65\x84\x00'],
        ['GS INS BYTE PTR es:[edi], dx',    b'\x65\x6c'],
        ['HLT',                             b'\xf4'],
        ['IMUL eax, ecx',                   b'\x0f\xaf\xc1'],
        ['IN al, 0x42',                     b'\xe4\x42'],
        ['IN al, dx',                       b'\xec'],
        ['INC eax',                         b'\x40'],
        ['INS DWORD PTR es:[edi], dx',      b'\x6d'],
        ['INT 0x80',                        b'\xcd\x80'],
        ['INT1',                            b'\xf1'],
        ['INT3',                            b'\xcc'],
        ['INTO',                            b'\xce'],
        ['INVD',                            b'\x0f\x08'],
        ['IRET',                            b'\xcf'],
        #['JGE 0x80',                        b'\x0f\x8d\x7a\x00\x00\x00'],
# 006e5213 jge    0x6e5293 => expected: 7d 7e
# 006814e5 jge    0x681565 => expected: 0f 8d 7a 00 00 00
        ['JO 0x8',                          b'\x70\x06'],
        ['JNO 0x8',                         b'\x71\x06'],
        ['JB 0x8',                          b'\x72\x06'],
        ['JAE 0x8',                         b'\x73\x06'],
        ['JE 0x8',                          b'\x74\x06'],
        ['JNE 0xa',                         b'\x75\x08'],
        ['JBE 0x65',                        b'\x76\x63'],
        ['JA 0x29',                         b'\x77\x27'],
        ['JS 0x22',                         b'\x78\x20'],
        ['JNS 0x7',                         b'\x79\x05'],
        ['JP 0x42',                         b'\x7a\x40'],
        ['JNP 0x1f',                        b'\x7b\x1d'],
        ['JL 0x81',                         b'\x7c\x7f'],
        ['JGE 0x81',                        b'\x7d\x7f'],
        ['JLE 0x7',                         b'\x7e\x05'],
        ['JG 0x9',                          b'\x7f\x07'],
        #['JMP 0x4031e0',                    b'\xe9\x0b\x00\x00\x00'],
        ['JMP 0x5',                         b'\xeb\x03'],
        ['JMP DWORD PTR [eax*4+0x40418c]',  b'\xff\x24\x85\x8c\x41\x40\x00'],
        #['JECXZ 0x49e6a4',                  b'\xe3\x49'],
        ['LAHF',                            b'\x9f'],
        ['LAR ebp, WORD PTR [eax+0x0]',     b'\x0f\x02\x68\x00'],

        ['LDS eax, FWORD PTR [edi+0x69]',   b'\xc5\x47\x69'],
        ['LDS ecx, FWORD PTR [ecx+0x0]',    b'\xc5\x49\x00'],
        ['LDS edx, FWORD PTR [eax+eax*1-0x70]', b'\xc5\x54\x00\x90'],
        ['LDS esp, FWORD PTR [ebp+0x0]',    b'\xc5\x65\x00'],
        ['LDS ebp, FWORD PTR ss:[ecx+0x0]', b'\x36\xc5\x69\x00'],
        ['LDS ebp, FWORD PTR ds:[ecx+0x0]', b'\x3e\xc5\x69\x00'],
        ['LDS esi, FWORD PTR [ebp+0x5a]',   b'\xc5\x75\x5a'],

        ['LEA ecx, [eax+edx*1]',            b'\x8d\x0c\x10'],
        ['LEA ecx, [edi+edx*1]',            b'\x8d\x0c\x17'],
        ['LEA edx, [edx*4-0x1]',            b'\x8d\x14\x95\xff\xff\xff\xff'],
        ['LEA esi, [eax*4+0x9059cc]',       b'\x8d\x34\x85\xcc\x59\x90\x00'],
        ['LEA esi, [esi+esi*4]',            b'\x8d\x34\xb6'],
        ['LEA eax, [eax+ecx*4+0x4]',        b'\x8d\x44\x88\x04'],
        ['LEA eax, [ebp-0x5c]',             b'\x8d\x45\xa4'],
        ['LEA ecx, [esp+ecx*1+0x14]',       b'\x8d\x4c\x0c\x14'],
        ['LEA ecx, [esp+0x10]',             b'\x8d\x4c\x24\x10'],
        ['LEA ecx, [edx+ebp*1-0x10]',       b'\x8d\x4c\x2a\xf0'],
        ['LEA edi, [eax+0x1]',              b'\x8d\x78\x01'],
        ['LEA ecx, [esp+0x90]',             b'\x8d\x8c\x24\x90\x00\x00\x00'],
        ['LEA ecx, [esp+eax*4+0xd0]',       b'\x8d\x8c\x84\xd0\x00\x00\x00'],
        ['LEA ecx, [ebp-0x130]',            b'\x8d\x8d\xd0\xfe\xff\xff'],
        ['LEA ecx, [esi+0x80]',             b'\x8d\x8e\x80\x00\x00\x00'],
        ['LEA ebx, [ebx+eax*4+0x2bc]',      b'\x8d\x9c\x83\xbc\x02\x00\x00'],
        ['LEAVE',                           b'\xc9'],
        ['LES eax, FWORD PTR [edx]',        b'\xc4\x02'],
        ['LES ebx, FWORD PTR [ebx]',        b'\xc4\x1b'],
        ['LES ecx, FWORD PTR [edx+0x49]',   b'\xc4\x4a\x49'],
        ['LES edx, FWORD PTR [eax+eax*1+0x58]', b'\xc4\x54\x00\x58'],
        ['LES edi, FWORD PTR [ecx+0x40]',   b'\xc4\x79\x40'],
        ['LFENCE',                          b'\x0f\xae\xe8'],
        ['LOCK OR BYTE PTR [edx+0x0], cl',  b'\xf0\x08\x4a\x00'],
        ['LOCK SUB edi, DWORD PTR [eax+0x0]',b'\xf0\x2b\x78\x00'],
        ['LOCK DEC ecx',                    b'\xf0\x49'],
        ['LOCK FSUBR DWORD PTR [ecx+0x0]',  b'\xf0\xd8\x69\x00'],
        ['LOCK FLDCW WORD PTR [ecx+0x0]',   b'\xf0\xd9\x69\x00'],
        ['LOCK IDIV DWORD PTR [edi+0x0]',   b'\xf0\xf7\x7f\x00'],
        ['LOCK INC DWORD PTR ds:0xba8390',  b'\xf0\xff\x05\x90\x83\xba\x00'],
        ['LOCK DEC DWORD PTR ds:0xba8390',  b'\xf0\xff\x0d\x90\x83\xba\x00'],
        ['LODS al, BYTE PTR ds:[esi]',      b'\xac'],
        ['LODS eax, BYTE PTR ds:[esi]',     b'\xad'],
        #['LOOP 0x49e688',                   b'\xe2\x49'],
        #['LOOP 0x4ae2dd',                   b'\xe2\x4a'],
        #['LOOPNE 0x42ecc1',                 b'\xe0\x42'],
        ['MFENCE',                          b'\x0f\xae\xf0'],
        ['MONITOR',                         b'\x0f\x01\xc8'],

        ['MOV BYTE PTR [ecx+esi*1], al',    b'\x88\x04\x31'],
        ['MOV BYTE PTR [edx+eax*1], cl',    b'\x88\x0c\x02'],
        ['MOV BYTE PTR [edi], cl',          b'\x88\x0f'],
        ['MOV BYTE PTR ds:0x0, bl',         b'\x88\x1d\x00\x00\x00\x00'],
        ['MOV BYTE PTR [esp+0x8], al',      b'\x88\x44\x24\x08'],
        ['MOV BYTE PTR [esp+eax*1+0x1c], cl', b'\x88\x4c\x04\x1c'],
        ['MOV BYTE PTR [ecx+eax*1+0x65], dl', b'\x88\x54\x01\x65'],
        ['MOV BYTE PTR [esi+ecx*1+0x1], dl',b'\x88\x54\x0e\x01'],
        ['MOV BYTE PTR [ebp+0xb], dl',      b'\x88\x55\x0b'],
        ['MOV BYTE PTR [ebp-0x48], dl',     b'\x88\x55\xb8'],
        ['MOV BYTE PTR [esp+0x127], bl',    b'\x88\x9c\x24\x27\x01\x00\x00'],
        ['MOV BYTE PTR [esi+0xb3], bl',     b'\x88\x9e\xb3\x00\x00\x00'],
        ['MOV BYTE PTR [esi+0x1b4], bl',    b'\x88\x9e\xb4\x01\x00\x00'],
        ['MOV DWORD PTR [eax+edx*4], ecx',  b'\x89\x0c\x90'],
        ['MOV DWORD PTR [edx*4+0x9059cc], ecx', b'\x89\x0c\x95\xcc\x59\x90\x00'],
        ['MOV DWORD PTR [edi], ecx',        b'\x89\x0f'],
        ['MOV DWORD PTR ds:0xb625c4, edx',  b'\x89\x15\xc4\x25\xb6\x00'],
        ['MOV DWORD PTR fs:0x0, esp',       b'\x64\x89\x25\x00\x00\x00\x00'],
        ['MOV DWORD PTR [esp+0x10], eax',   b'\x89\x44\x24\x10'],
        ['MOV DWORD PTR [edi+ecx*4+0x4], eax', b'\x89\x44\x8f\x04'],
        ['MOV DWORD PTR [eax+0x4], ecx',    b'\x89\x48\x04'],
        ['MOV DWORD PTR [ebp-0x18], esp',   b'\x89\x65\xe8'],
        ['MOV DWORD PTR [eax+ebx*4-0x4], ebp', b'\x89\x6c\x98\xfc'],
        ['MOV DWORD PTR [esp+0x80], eax',   b'\x89\x84\x24\x80\x00\x00\x00'],
        ['MOV DWORD PTR [esi+0x528], eax',  b'\x89\x86\x28\x05\x00\x00'],
        ['MOV DWORD PTR [esi+0x80], eax',   b'\x89\x86\x80\x00\x00\x00'],
        ['MOV WORD PTR [edx], ax',          b'\x66\x89\x02'],
        ['MOV WORD PTR [esi+0xe4], ax',     b'\x66\x89\x86\xe4\x00\x00\x00'],
        ['MOV DWORD PTR [esp+0x130], ebx',  b'\x89\x9c\x24\x30\x01\x00\x00'],
        ['MOV al, BYTE PTR [ebx+ecx*1]',    b'\x8a\x04\x0b'],
        ['MOV dl, BYTE PTR [ebx+eax*1]',    b'\x8a\x14\x03'],
        ['MOV cl, BYTE PTR [edi]',          b'\x8a\x0f'],
        ['MOV dl, BYTE PTR ds:0x8cc6a2',    b'\x8a\x15\xa2\xc6\x8c\x00'],
        ['MOV al, BYTE PTR [ebp-0x20]',     b'\x8a\x45\xe0'],
        ['MOV cl, BYTE PTR [edi+ebp*1+0x8]',b'\x8a\x4c\x2f\x08'],
        ['MOV dl, BYTE PTR [ecx+ebp*1+0x1]',b'\x8a\x54\x29\x01'],
        ['MOV dl, BYTE PTR [ebp+0xb]',      b'\x8a\x55\x0b'],
        ['MOV bl, BYTE PTR [esp+0x8]',      b'\x8a\x5c\x24\x08'],
        ['MOV al, BYTE PTR [esi+0xd8]',     b'\x8a\x86\xd8\x00\x00\x00'],
        ['MOV cl, BYTE PTR [eax+0x40f86c]', b'\x8a\x88\x6c\xf8\x40\x00'],
        ['MOV dl, ah',                      b'\x8a\xd4'],
        ['MOV ecx, DWORD PTR [eax*4+0x9059cc]', b'\x8b\x0c\x85\xcc\x59\x90\x00'],
        ['MOV ecx, DWORD PTR [edi]',        b'\x8b\x0f'],
        ['MOV ecx, DWORD PTR ds:0x907fc0',  b'\x8b\x0d\xc0\x7f\x90\x00'],
        ['MOV ebx, DWORD PTR [edx+eax*1]',  b'\x8b\x1c\x02'],
        ['MOV edi, DWORD PTR [eax+edx*4]',  b'\x8b\x3c\x90'],
        ['MOV eax, DWORD PTR [esp+0x4]',    b'\x8b\x44\x24\x04'],
        ['MOV eax, DWORD PTR [esp+0xc]',    b'\x8b\x44\x24\x0c'],
        ['MOV eax, DWORD PTR [ebp-0x14]',   b'\x8b\x45\xec'],
        ['MOV ecx, DWORD PTR [edx+0x4]',    b'\x8b\x4a\x04'],
        ['MOV edx, DWORD PTR [ecx+edx*8-0x8]', b'\x8b\x54\xd1\xf8'],
        ['MOV ebx, DWORD PTR [edx+eax*1+0x4]', b'\x8b\x5c\x02\x04'],
        ['MOV eax, DWORD PTR [esp+0xf0]',   b'\x8b\x84\x24\xf0\x00\x00\x00'],
        ['MOV eax, DWORD PTR [ebx+eax*4+0x2bc]', b'\x8b\x84\x83\xbc\x02\x00\x00'],
        ['MOV cx, WORD PTR [ebx+0x18]',     b'\x66\x8b\x4b\x18'],
        ['MOV ebx, DWORD PTR [esp+0x14]',   b'\x8b\x5c\x24\x14'],
        ['MOV ebp, DWORD PTR [esp+0x10]',   b'\x8b\x6c\x24\x10'],
        ['MOV esi, DWORD PTR [esp+0x10]',   b'\x8b\x74\x24\x10'],
        ['MOV ecx, DWORD PTR [ebx+0x84]',   b'\x8b\x8b\x84\x00\x00\x00'],
        ['MOV ecx, DWORD PTR [esi+0x174]',  b'\x8b\x8e\x74\x01\x00\x00'],
        ['MOV edi, DWORD PTR [esp+0x14c]',  b'\x8b\xbc\x24\x4c\x01\x00\x00'],
        ['MOV ecx, esi',                    b'\x8b\xce'],
        ['MOV ebp, esp',                    b'\x8b\xec'],
        ['MOV WORD PTR [edx+0x0], es',      b'\x8c\x42\x00'],
        ['MOV WORD PTR [edi], cs',          b'\x8c\x0f'],
        ['MOV cs, WORD PTR [edi]',          b'\x8e\x0f'],
        ['MOV al, ds:0x1',                  b'\xa0\x01\x00\x00\x00'],
        ['MOV al, fs:0x1',                  b'\x64\xa0\x01\x00\x00\x00'],
        ['MOV eax, ds:0x1',                 b'\xa1\x01\x00\x00\x00'],
        ['MOV eax, fs:0x1',                 b'\x64\xa1\x01\x00\x00\x00'],
        ['MOV ds:0x1, al',                  b'\xa2\x01\x00\x00\x00'],
        ['MOV fs:0x1, al',                  b'\x64\xa2\x01\x00\x00\x00'],
        ['MOV ds:0x1, eax',                 b'\xa3\x01\x00\x00\x00'],
        ['MOV ds:0xba8398, eax',            b'\xa3\x98\x83\xba\x00'],
        ['MOV fs:0x1, eax',                 b'\x64\xa3\x01\x00\x00\x00'],
        ['MOV bh, 0x1',                     b'\xb7\x01'],
        ['MOV eax, 0x1',                    b'\xb8\x01\x00\x00\x00'],
        ['MOV ecx, 0x907f90',               b'\xb9\x90\x7f\x90\x00'],
        ['MOV edi, 0x1',                    b'\xbf\x01\x00\x00\x00'],
        ['MOV BYTE PTR [ecx], 0x1',         b'\xc6\x01\x01'],
        ['MOV BYTE PTR [esi+edx*1], 0x0',   b'\xc6\x04\x16\x00'],
        ['MOV BYTE PTR [ecx+0x8], 0x1',     b'\xc6\x41\x08\x01'],
        ['MOV BYTE PTR [esp+0x20], 0x2',    b'\xc6\x44\x24\x20\x02'],
        ['MOV BYTE PTR [ebp-0x4], 0x2',     b'\xc6\x45\xfc\x02'],
        ['MOV BYTE PTR [esp+0x154], 0x1',   b'\xc6\x84\x24\x54\x01\x00\x00\x01'],
        ['MOV BYTE PTR [esp+esi*1+0x220], 0x0', b'\xc6\x84\x34\x20\x02\x00\x00\x00'],
        ['MOV BYTE PTR [esi+0x1b5], 0x1',   b'\xc6\x86\xb5\x01\x00\x00\x01'],
        ['MOV BYTE PTR [esi+0xd8], 0x0',    b'\xc6\x86\xd8\x00\x00\x00\x00'],
        ['MOV DWORD PTR [ecx], 0x1',        b'\xc7\x01\x01\x00\x00\x00'],
        ['MOV DWORD PTR ds:0x8cbb40, 0x3e8',b'\xc7\x05\x40\xbb\x8c\x00\xe8\x03\x00\x00'],
        ['MOV DWORD PTR [esp+0x50], 0xffffffff', b'\xc7\x44\x24\x50\xff\xff\xff\xff'],
        ['MOV WORD PTR [esp+0x60], 0x7025', b'\x66\xc7\x44\x24\x60\x25\x70'],
        ['MOV DWORD PTR [eax+ebp*4-0x4], 0x0', b'\xc7\x44\xa8\xfc\x00\x00\x00\x00'],
        ['MOV DWORD PTR [ebp-0x4], 0x0',    b'\xc7\x45\xfc\x00\x00\x00\x00'],
        ['MOV DWORD PTR [esi+0x7c], 0x0',   b'\xc7\x46\x7c\x00\x00\x00\x00'],
        ['MOV DWORD PTR [esp+0x130], 0x1',  b'\xc7\x84\x24\x30\x01\x00\x00\x01\x00\x00\x00'],
        ['MOV DWORD PTR [esp+0x80], 0x40c00000', b'\xc7\x84\x24\x80\x00\x00\x00\x00\x00\xc0\x40'],
        ['MOV DWORD PTR [ebp-0x130], 0x86e5ec',  b'\xc7\x85\xd0\xfe\xff\xff\xec\xe5\x86\x00'],
        ['MOV DWORD PTR [esi+0xa4], 0x0',  b'\xc7\x86\xa4\x00\x00\x00\x00\x00\x00\x00'],

        ['MOVAPD xmm2, XMMWORD PTR ds:0x889c60', b'\x66\x0f\x28\x15\x60\x9c\x88\x00'],
        ['MOVAPD xmm2, XMMWORD PTR [esp+0x1b0]', b'\x66\x0f\x28\x94\x24\xb0\x01\x00\x00'],
        ['MOVAPD XMMWORD PTR [esp+0xc0], xmm0', b'\x66\x0f\x29\x84\x24\xc0\x00\x00\x00'],
        ['MOVAPD XMMWORD PTR [esp+0xe0], xmm2', b'\x66\x0f\x29\x94\x24\xe0\x00\x00\x00'],
        ['MOVD mm0, DWORD PTR ds:0x883008', b'\x0f\x6e\x05\x08\x30\x88\x00'],
        ['MOVD mm1, DWORD PTR ds:0x882f70', b'\x0f\x6e\x0d\x70\x2f\x88\x00'],
        ['MOVD mm1, DWORD PTR [esp]',       b'\x0f\x6e\x0c\x24'],
        ['MOVD mm2, DWORD PTR [esp+0x8]',   b'\x0f\x6e\x54\x24\x08'],
        ['MOVD mm4, DWORD PTR [edx+0x14]',  b'\x0f\x6e\x62\x14'],
        ['MOVD mm5, DWORD PTR [edx+0x28]',  b'\x0f\x6e\x6a\x28'],
        ['MOVD mm1, DWORD PTR [esp+0x94]',  b'\x0f\x6e\x8c\x24\x94\x00\x00\x00'],
        ['MOVD mm0, edx',                   b'\x0f\x6e\xc2'],
        ['MOVD DWORD PTR [eax], mm0',       b'\x0f\x7e\x00'],
        ['MOVD DWORD PTR [ecx], mm0',       b'\x0f\x7e\x01'],
        ['MOVD DWORD PTR [esp], mm0',       b'\x0f\x7e\x04\x24'],
        ['MOVD DWORD PTR [esp], mm1',       b'\x0f\x7e\x0c\x24'],
        ['MOVD DWORD PTR [edx+0x8], mm0',   b'\x0f\x7e\x42\x08'],
        ['MOVD DWORD PTR [edx-0xc], mm0',   b'\x0f\x7e\x42\xf4'],
        ['MOVD DWORD PTR [ebp+0x34], mm0',  b'\x0f\x7e\x45\x34'],
        ['MOVD DWORD PTR [esp+0x4], mm3',   b'\x0f\x7e\x5c\x24\x04'],
        ['MOVD DWORD PTR [esp+0xc], mm7',   b'\x0f\x7e\x7c\x24\x0c'],
        ['MOVD eax, mm6',                   b'\x0f\x7e\xf0'],
        ['MOVD ecx, mm6',                   b'\x0f\x7e\xf1'],
        ['MOVDQA xmm1, XMMWORD PTR ds:0x8e9bd0', b'\x66\x0f\x6f\x0d\xd0\x9b\x8e\x00'],
        ['MOVDQA xmm2, XMMWORD PTR ds:0x8e9be0', b'\x66\x0f\x6f\x15\xe0\x9b\x8e\x00'],
        ['MOVDQA xmm3, xmm1',               b'\x66\x0f\x6f\xd9'],
        ['MOVHLPS xmm2, xmm0',              b'\x0f\x12\xd0'],

        ['MOVHPS xmm0, QWORD PTR [ebx+0x8]',b'\x0f\x16\x43\x08'],
        ['MOVHPS xmm1, QWORD PTR [eax+0x8]',b'\x0f\x16\x48\x08'],
        ['MOVHPS xmm1, QWORD PTR [esp+0x8]',b'\x0f\x16\x4c\x24\x08'],
        ['MOVHPS xmm1, QWORD PTR [ecx]',    b'\x0f\x16\x09'],
        ['MOVHPS QWORD PTR [edx], xmm0',    b'\x0f\x17\x02'],
        ['MOVHPS QWORD PTR [edx+0x8], xmm1',b'\x0f\x17\x4a\x08'],

        ['MOVLHPS xmm2, xmm1',              b'\x0f\x16\xd1'],
        ['MOVLHPS xmm3, xmm1',              b'\x0f\x16\xd9'],

        ['MOVLPS xmm0, QWORD PTR [ebx]',    b'\x0f\x12\x03'],
        ['MOVLPS xmm1, QWORD PTR [eax]',    b'\x0f\x12\x08'],
        ['MOVLPS xmm1, QWORD PTR [esi+edx*1]',b'\x0f\x12\x0c\x16'],
        ['MOVLPS xmm5, QWORD PTR [esi+edx*1]',b'\x0f\x12\x2c\x16'],
        ['MOVLPS xmm1, QWORD PTR [esp]',    b'\x0f\x12\x0c\x24'],
        ['MOVLPS xmm1, QWORD PTR [ecx+0x10]',b'\x0f\x12\x49\x10'],
        ['MOVLPS QWORD PTR [edi+eax*1], xmm0',b'\x0f\x13\x04\x07'],
        ['MOVLPS QWORD PTR [edx], xmm1',    b'\x0f\x13\x0a'],
        ['MOVLPS QWORD PTR [ecx+0x10], xmm3',b'\x0f\x13\x59\x10'],
        ['MOVLPS QWORD PTR [edx+0x10], xmm5',b'\x0f\x13\x6a\x10'],

        ['MOVMSKPS eax, xmm1',              b'\x0f\x50\xc1'],
        ['MOVMSKPS ebx, xmm6',              b'\x0f\x50\xde'],

        ['MOVS WORD PTR es:[edi], WORD PTR ds:[esi]', b'\x66\xa5'],
        ['MOVSX edx, BYTE PTR [ecx]',       b'\x0f\xbe\x11'],
        ['MOVUPS xmm2, XMMWORD PTR [ecx]',  b'\x0f\x10\x11'],
        ['MOVUPS xmm2, XMMWORD PTR [ebx]',  b'\x0f\x10\x13'],
        ['MOVUPS xmm3, XMMWORD PTR [ecx]',  b'\x0f\x10\x19'],
        ['MOVUPS xmm3, XMMWORD PTR [ecx+0x30]',b'\x0f\x10\x59\x30'],
        ['MOVUPS xmm4, XMMWORD PTR [ecx+0x10]',b'\x0f\x10\x61\x10'],
        ['MOVUPS XMMWORD PTR [eax], xmm1',  b'\x0f\x11\x08'],
        ['MOVUPS XMMWORD PTR [ecx], xmm1',  b'\x0f\x11\x09'],
        ['MOVUPS XMMWORD PTR [edi+eax*1], xmm3',b'\x0f\x11\x1c\x07'],
        ['MOVUPS XMMWORD PTR [edi+eax*1], xmm4',b'\x0f\x11\x24\x07'],

        ['MOVZX eax, WORD PTR [ebp-0x2c]',  b'\x0f\xb7\x45\xd4'],
        ['MUL BYTE PTR [ebx+0x66]',         b'\xf6\x63\x66'],
        ['MUL DWORD PTR [edi]',             b'\xf7\x27'],
        ['MUL DWORD PTR [esp+0x30]',        b'\xf7\x64\x24\x30'],
        ['MUL DWORD PTR [edi+0x4]',         b'\xf7\x67\x04'],
        ['MUL ecx',                         b'\xf7\xe1'],
        ['MUL edx',                         b'\xf7\xe2'],
        ['MULPD xmm0, XMMWORD PTR [esp+0xe0]', b'\x66\x0f\x59\x84\x24\xe0\x00\x00\x00'],
        ['MULPD xmm0, XMMWORD PTR [esp+0x150]',b'\x66\x0f\x59\x84\x24\x50\x01\x00\x00'],
        ['MULPD xmm0, xmm0',                b'\x66\x0f\x59\xc0'],
        ['MULSS xmm5, DWORD PTR ds:0x8e9960',b'\xf3\x0f\x59\x2d\x60\x99\x8e\x00'],
        ['MULSS xmm4, xmm0',                b'\xf3\x0f\x59\xe0'],
        ['MWAIT',                           b'\x0f\x01\xc9'],
        ['NOP',                             b'\x90'],
        ['NOT BYTE PTR [eax]',              b'\xf6\x10'],
        ['NOT cl',                          b'\xf6\xd1'],
        ['NOT ecx',                         b'\xf7\xd1'],
        ['OR ecx, 0xffffffff',              b'\x83\xc9\xff'],
        ['ORPS xmm2, XMMWORD PTR [esp+0x10]',b'\x0f\x56\x54\x24\x10'],
        ['ORPS xmm2, xmm5',                 b'\x0f\x56\xd5'],
        ['OUT 0x42, al',                    b'\xe6\x42'],
        ['OUT 0x42, eax',                   b'\xe7\x42'],
        ['OUTS dx, BYTE PTR ds:[esi]',      b'\x6e'],
        ['OUTS dx, DWORD PTR ds:[esi]',     b'\x6f'],
        ['PACKSSWB mm1, mm7',               b'\x0f\x63\xcf'],
        ['PACKSSWB mm2, mm2',               b'\x0f\x63\xd2'],
        ['PACKSSWB mm6, mm6',               b'\x0f\x63\xf6'],
        ['PACKSSDW mm6, mm7',               b'\x0f\x6b\xf7'],
        ['PACKUSWB mm0, mm4',               b'\x0f\x67\xc4'],
        ['PACKUSWB mm0, QWORD PTR [eax]',   b'\x0f\x67\x00'],
        ['PADDB mm1, mm5',                  b'\x0f\xfc\xcd'],
        ['PADDB mm2, mm1',                  b'\x0f\xfc\xd1'],
        ['PADDD mm0, QWORD PTR ds:0x890ec8',b'\x0f\xfe\x05\xc8\x0e\x89\x00'],
        ['PADDD mm2, QWORD PTR ds:0x890ec8',b'\x0f\xfe\x15\xc8\x0e\x89\x00'],
        ['PADDD mm1, QWORD PTR [ebp+0x34]', b'\x0f\xfe\x4d\x34'],
        ['PADDD mm3, QWORD PTR [ebp-0x64]', b'\x0f\xfe\x5d\x9c'],
        ['PADDD mm5, QWORD PTR [ebp+0x3c]', b'\x0f\xfe\x6d\x3c'],
        ['PADDD mm7, QWORD PTR [ebp-0x94]', b'\x0f\xfe\xbd\x6c\xff\xff\xff'],
        ['PADDD mm6, mm4',                  b'\x0f\xfe\xf4'],
        ['PADDD xmm1, xmm4',                b'\x66\x0f\xfe\xcc'],
        ['PADDSW mm0, QWORD PTR ds:0x889ea8',b'\x0f\xed\x05\xa8\x9e\x88\x00'],
        ['PADDSW mm0, mm1',                 b'\x0f\xed\xc1'],
        ['PAND mm0, QWORD PTR ds:0x8e99a0', b'\x0f\xdb\x05\xa0\x99\x8e\x00'],
        ['PAND mm2, QWORD PTR [ebp-0x44]',  b'\x0f\xdb\x55\xbc'],
        ['PAND mm6, mm0',                   b'\x0f\xdb\xf0'],
        ['PAND xmm1, xmm0',                 b'\x66\x0f\xdb\xc8'],
        ['PANDN mm3, QWORD PTR ds:0x8e9990',b'\x0f\xdf\x1d\x90\x99\x8e\x00'],
        ['PANDN xmm3, XMMWORD PTR ds:0x8e9bb0',b'\x66\x0f\xdf\x1d\xb0\x9b\x8e\x00'],
        ['PANDN mm5, mm3',                  b'\x0f\xdf\xeb'],
        ['PAUSE',                           b'\xf3\x90'],
        ['PCMPEQD mm0, mm6',                b'\x0f\x76\xc6'],
        ['PCMPEQW mm3, mm7',                b'\x0f\x75\xdf'],
        ['PCMPEQW xmm3, xmm7',              b'\x66\x0f\x75\xdf'],
        ['PCMPGTD mm3, mm5',                b'\x0f\x66\xdd'],
        ['PCMPGTD mm6, mm0',                b'\x0f\x66\xf0'],
        ['PCONFIG',                         b'\x0f\x01\xc5'],
        ['PF2ID mm4, mm4',                  b'\x0f\x0f\xe4\x1d'],
        ['PFACC mm4, mm2',                  b'\x0f\x0f\xe2\xae'],
        ['PFADD mm0, QWORD PTR ds:0x882f70',b'\x0f\x0f\x05\x70\x2f\x88\x00\x9e'],
        ['PFADD mm1, QWORD PTR ds:0x882f70',b'\x0f\x0f\x0d\x70\x2f\x88\x00\x9e'],
        ['PFADD mm0, QWORD PTR [edx+0x30]', b'\x0f\x0f\x42\x30\x9e'],
        ['PFADD mm0, QWORD PTR [esp+0x60]', b'\x0f\x0f\x44\x24\x60\x9e'],
        ['PFADD mm1, QWORD PTR [esp+0x68]', b'\x0f\x0f\x4c\x24\x68\x9e'],
        ['PFADD mm2, mm3',                  b'\x0f\x0f\xd3\x9e'],
        ['PFCMPEQ mm3, mm4',                b'\x0f\x0f\xdc\xb0'],
        ['PFCMPGE mm1, QWORD PTR [esi]',    b'\x0f\x0f\x0e\x90'],
        ['PFCMPGE mm3, QWORD PTR ds:0x883008', b'\x0f\x0f\x1d\x08\x30\x88\x00\x90'],
        ['PFCMPGT mm5, QWORD PTR ds:0x882ff0', b'\x0f\x0f\x2d\xf0\x2f\x88\x00\xa0'],
        ['PFCMPGT mm2, mm0',                b'\x0f\x0f\xd0\xa0'],
        ['PFMAX mm0, mm6',                  b'\x0f\x0f\xc6\xa4'],
        ['PFMIN mm0, mm1',                  b'\x0f\x0f\xc1\x94'],
        ['PFMIN mm1, mm2',                  b'\x0f\x0f\xca\x94'],
        ['PFNACC mm5, mm4',                 b'\x0f\x0f\xec\x8a'],
        ['PFNACC mm6, mm7',                 b'\x0f\x0f\xf7\x8a'],
        ['PFPNACC mm3, mm3',                b'\x0f\x0f\xdb\x8e'],
        ['PFRCP mm2, mm3',                  b'\x0f\x0f\xd3\x96'],
        ['PFRCPIT1 mm4, mm2',               b'\x0f\x0f\xe2\xa6'],
        ['PFRCPIT2 mm0, mm4',               b'\x0f\x0f\xc4\xb6'],
        ['PFRSQIT1 mm0, mm2',               b'\x0f\x0f\xc2\xa7'],
        ['PFRSQRT mm4, mm0',                b'\x0f\x0f\xe0\x97'],
        ['PFSUB mm0, QWORD PTR [ecx]',      b'\x0f\x0f\x01\x9a'],
        ['PFSUB mm0, QWORD PTR ds:0x883008',b'\x0f\x0f\x05\x08\x30\x88\x00\x9a'],
        ['PFSUB mm4, mm5',                  b'\x0f\x0f\xe5\x9a'],
        ['PFSUBR mm0, QWORD PTR [ecx]',     b'\x0f\x0f\x01\xaa'],
        ['PFSUBR mm3, QWORD PTR ds:0x883008',b'\x0f\x0f\x1d\x08\x30\x88\x00\xaa'],
        ['PFSUBR mm7, QWORD PTR ds:0x882f80',b'\x0f\x0f\x3d\x80\x2f\x88\x00\xaa'],
        ['PFSUBR mm2, mm4',                 b'\x0f\x0f\xd4\xaa'],
        ['PI2FD mm2, mm2',                  b'\x0f\x0f\xd2\x0d'],
        ['PMADDWD mm4, mm6',                b'\x0f\xf5\xe6'],
        ['PMAXSW mm6, QWORD PTR ds:0x8e99d0', b'\x0f\xee\x35\xd0\x99\x8e\x00'],
        ['PMAXSW xmm1, QWORD PTR ds:0x8e9bf0', b'\x66\x0f\xee\x0d\xf0\x9b\x8e\x00'],
        ['PMOVMSKB ecx, mm6',               b'\x0f\xd7\xce'],
        ['PMOVMSKB ecx, xmm3',              b'\x66\x0f\xd7\xcb'],
        ['PMULHW mm0, QWORD PTR ds:0x889e88', b'\x0f\xe5\x05\x88\x9e\x88\x00'],
        ['PMULHW mm1, QWORD PTR ds:0x889e90', b'\x0f\xe5\x0d\x90\x9e\x88\x00'],
        ['PMULLW mm0, QWORD PTR ds:0x889e30', b'\x0f\xd5\x05\x30\x9e\x88\x00'],
        ['PMULLW mm0, mm1',                 b'\x0f\xd5\xc1'],
        ['POP ecx',                         b'\x59'],
        ['POPA',                            b'\x61'],
        ['POPF',                            b'\x9d'],
        ['POR mm3, QWORD PTR ds:0x883040',  b'\x0f\xeb\x1d\x40\x30\x88\x00'],
        ['POR mm5, QWORD PTR ds:0x883040',  b'\x0f\xeb\x2d\x40\x30\x88\x00'],
        ['POR mm2, mm3',                    b'\x0f\xeb\xd3'],
        ['POR xmm2, xmm3',                  b'\x66\x0f\xeb\xd3'],
        ['PREFETCHW BYTE PTR ds:0xd0d0d0d', b'\x0f\x0d\x0d\x0d\x0d\x0d\x0d'],
        ['PSLLD mm6, 0xd',                  b'\x0f\x72\xf6\x0d'],
        ['PSLLD xmm1, 0xd',                 b'\x66\x0f\x72\xf1\x0d'],
        ['PSLLQ mm1, 0x20',                 b'\x0f\x73\xf1\x20'],
        ['PSLLW mm0, 0x2',                  b'\x0f\x71\xf0\x02'],
        ['PSRAD xmm0, 0x1f',                b'\x66\x0f\x72\xe0\x1f'],
        ['PSRAW mm0, 0x2',                  b'\x0f\x71\xe0\x02'],
        ['PSRAW mm4, 0x2',                  b'\x0f\x71\xe4\x02'],
        ['PSRLD mm6, 0x12',                 b'\x0f\x72\xd6\x12'],
        ['PSRLQ mm7, 0x20',                 b'\x0f\x73\xd7\x20'],
        ['PSRLW mm1, 0x2',                  b'\x0f\x71\xd1\x02'],
        ['PSUBD mm1, QWORD PTR [ebp+0x2c]', b'\x0f\xfa\x4d\x2c'],
        ['PSUBD mm0, QWORD PTR [ebp-0x34]', b'\x0f\xfa\x55\xcc'],
        ['PSUBD mm0, QWORD PTR [ebp-0x94]', b'\x0f\xfa\x85\x6c\xff\xff\xff'],
        ['PSUBD mm5, QWORD PTR [ebp-0x84]', b'\x0f\xfa\xad\x7c\xff\xff\xff'],
        ['PSUBD mm0, mm2',                  b'\x0f\xfa\xc2'],
        ['PSUBD xmm3, xmm0',                b'\x66\x0f\xfa\xd8'],
        ['PSUBSW mm0, mm7',                 b'\x0f\xe9\xc7'],
        ['PSUBSW mm0, QWORD PTR [ebp-0x4c]',b'\x0f\xe9\x45\xb4'],
        ['PSUBSW mm3, QWORD PTR [ebp-0x4c]',b'\x0f\xe9\x5d\xb4'],
        ['PSUBSW mm2, QWORD PTR ds:0x890f30',b'\x0f\xe9\x15\x30\x0f\x89\x00'],
        ['PSUBW mm1, mm6',                  b'\x0f\xf9\xce'],
        ['PSWAPD mm3, mm0',                 b'\x0f\x0f\xd8\xbb'],
        ['PUNPCKHBW mm0, QWORD PTR ds:0x889e80',b'\x0f\x68\x05\x80\x9e\x88\x00'],
        ['PUNPCKHBW mm1, QWORD PTR [ebp-0x10]', b'\x0f\x68\x4d\xf0'],
        ['PUNPCKHBW mm3, QWORD PTR [ebp-0x10]', b'\x0f\x68\x5d\xf0'],
        ['PUNPCKHBW mm0, mm6',              b'\x0f\x68\xc6'],
        ['PUNPCKHWD mm3, mm7',              b'\x0f\x69\xdf'],
        ['PUNPCKHWD xmm3, xmm7',            b'\x66\x0f\x69\xdf'],

        ['PUNPCKLBW mm0, DWORD PTR [eax]',  b'\x0f\x60\x00'],
        ['PUNPCKLBW mm0, DWORD PTR ds:0x889e80]',b'\x0f\x60\x05\x80\x9e\x88\x00'],
        ['PUNPCKLBW mm2, DWORD PTR ds:0x889e80]',b'\x0f\x60\x15\x80\x9e\x88\x00'],
        ['PUNPCKLBW mm0, DWORD PTR [ebp-0x10]',b'\x0f\x60\x45\xf0'],
        ['PUNPCKLBW mm2, DWORD PTR [ebp-0x10]',b'\x0f\x60\x55\xf0'],
        ['PUNPCKLBW mm0, mm6',              b'\x0f\x60\xc6'],

        ['PUNPCKLWD mm6, mm7',              b'\x0f\x61\xf7'],
        ['PUNPCKLWD xmm1, xmm7',            b'\x66\x0f\x61\xcf'],
        ['PUSH es',                         b'\x06'],
        ['PUSH cs',                         b'\x0e'],
        ['PUSH ss',                         b'\x16'],
        ['PUSH ds',                         b'\x1e'],
        ['PUSH fs',                         b'\x0f\xa0'],
        ['PUSH gs',                         b'\x0f\xa8'],
        ['PUSH ebp',                        b'\x55'],
        ['PUSH 0x895530',                   b'\x68\x30\x55\x89\x00'],
        ['PUSH 0x1',                        b'\x6a\x01'],
        ['PUSH 0xffffffff',                 b'\x6a\xff'],
        ['PUSH DWORD PTR [eax]',            b'\xff\x30'],
        ['PUSH DWORD PTR [eax+esi*4]',      b'\xff\x34\xb0'],
        ['PUSH DWORD PTR [eax*4+0x884560]', b'\xff\x34\x85\x60\x45\x88\x00'],
        ['PUSH DWORD PTR fs:0x0',           b'\x64\xff\x35\x00\x00\x00\x00'],
        ['PUSH DWORD PTR ds:0xb554b0',      b'\xff\x35\xb0\x54\xb5\x00'],
        ['PUSH DWORD PTR [esi*4+0x8efd60]', b'\xff\x34\xb5\x60\xfd\x8e\x00'],
        ['PUSH DWORD PTR [eax+0xc]',        b'\xff\x70\x0c'],
        ['PUSH DWORD PTR [esp+0x10]',       b'\xff\x74\x24\x10'],
        ['PUSH DWORD PTR [ebp+edi*1*0x54]', b'\xff\x74\x3d\x54'],
        ['PUSH DWORD PTR [ebp+edx*4-0x14]', b'\xff\x74\x95\xec'],
        ['PUSH DWORD PTR [ebp+0x18]',       b'\xff\x75\x18'],
        ['PUSH DWORD PTR [ebp-0x80]',       b'\xff\x75\x80'],
        ['PUSH DWORD PTR [ebp-0x64]',       b'\xff\x75\x9c'],
        ['PUSH DWORD PTR [edx+0x1058]',     b'\xff\xb2\x58\x10\x00\x00'],
        ['PUSH DWORD PTR [ebp-0x154]',      b'\xff\xb5\xac\xfe\xff\xff'],
        ['PUSH DWORD PTR [esi+0x9c]',       b'\xff\xb6\x9c\x00\x00\x00'],
        ['PUSHA',                           b'\x60'],
        ['PUSHF',                           b'\x9c'],
        ['PXOR mm0, QWORD PTR [edx]',       b'\x0f\xef\x02'],
        ['PXOR mm1, QWORD PTR [ecx]',       b'\x0f\xef\x09'],
        ['PXOR mm1, QWORD PTR [edx]',       b'\x0f\xef\x0a'],
        ['PXOR mm2, QWORD PTR [ecx+0x8]',   b'\x0f\xef\x51\x08'],
        ['PXOR mm2, QWORD PTR [edx+0x8]',   b'\x0f\xef\x52\x08'],
        ['PXOR mm5, QWORD PTR ds:0x882f98', b'\x0f\xef\x2d\x98\x2f\x88\x00'],
        ['PXOR mm6, mm6',                   b'\x0f\xef\xf6'],
        ['PXOR xmm7, xmm7',                 b'\x66\x0f\xef\xff'],
        ['RCL BYTE PTR [eax], 0x68',        b'\xc0\x10\x68'],
        ['RCL al, 0x69',                    b'\xc0\xd0\x69'],
        ['RCL BYTE PTR [eax+0x0], 1',       b'\xd0\x50\x00'],
        ['RCL BYTE PTR ds:[eax+0x0], 1',    b'\x3e\xd0\x50\x00'],
        ['RCL BYTE PTR fs:[eax+0x0], 1',    b'\x64\xd0\x50\x00'],
        ['RCL BYTE PTR fs:[eax+0x0], cl',   b'\x64\xd2\x50\x00'],
        ['RCL DWORD PTR [eax+0x0], 1',      b'\xd1\x50\x00'],
        ['RCL BYTE PTR [ebx], cl',          b'\xd2\x13'],
        ['RCL cl, cl',                      b'\xd2\xd1'],
        ['RCL bl, cl',                      b'\xd2\xd3'],
        ['RCPPS xmm0, xmm1',                b'\x0f\x53\xc1'],
        ['RCPPS xmm2, XMMWORD PTR [esp+0x30]',b'\x0f\x53\x54\x24\x30'],
        ['RCPSS xmm2, xmm0',                b'\xf3\x0f\x53\xd0'],
        ['RCR al, 0x69',                    b'\xc0\xd8\x69'],
        ['RCR cl, 0x69',                    b'\xc0\xd9\x69'],
        ['RCR al, 1',                       b'\xd0\xd8'],
        ['RCR BYTE PTR [eax], 1',           b'\xd0\x18'],
        ['RCR ecx, 1',                      b'\xd1\xd9'],
        ['RCR esi, 1',                      b'\xd1\xde'],
        ['RCR edi, cl',                     b'\xd3\xdf'],
        ['RDMSR',                           b'\x0f\x32'],
        ['RDPKRU',                          b'\x0f\x01\xee'],
        ['RDPMC',                           b'\x0f\x33'],
        ['RDTSC',                           b'\x0f\x31'],
        ['RDTSCP',                          b'\x0f\x01\xf9'],
        ['REP MOVS BYTE PTR es:[edi], BYTE PTR ds:[esi]',   b'\xf3\xa4'],
        ['REP MOVS DWORD PTR es:[edi], DWORD PTR ds:[esi]', b'\xf3\xa5'],
        ['REP STOS BYTE PTR es:[edi], al',  b'\xf3\xaa'],
        ['REP STOS DWORD PTR es:[edi], eax',b'\xf3\xab'],
        ['REP STOS WORD PTR es:[edi], ax',  b'\x66\xf3\xab'],
        ['REPNZ XOR BYTE PTR [edi+0x0], bl',b'\xf2\x30\x5f\x00'],
        ['REPNZ data16 ADD BYTE PTR [edx+esi*8+0x66], bh', b'\xf2\x66\x00\x7c\xf2\x66'],
        ['REPNZ SCAS al, BYTE PTR es:[edi]',b'\xf2\xae'],
        ['REPNZ RCL DWORD PTR [ecx+0x0], 1',b'\xf2\xd1\x51\x00'],
        ['REPZ ADC esp, DWORD PTR [esi+0x0]',b'\xf3\x13\x66\x00'],
        ['REPZ CMPS WORD ds:[esi], WORD PTR es:[edi]', b'\x66\xf3\xa7'],
        ['RET 0x10',                        b'\xc2\x10\x00'],
        ['RET',                             b'\xc3'],
        ['RETF',                            b'\xcb'],
        ['RETF 0x45',                       b'\xca\x45\x00'],
        ['ROL BYTE PTR [edi], 1',           b'\xd0\x07'],
        ['ROL cl, 1',                       b'\xd0\xc1'],
        ['ROL ch, 1',                       b'\xd0\xc5'],
        ['ROL esp, 1',                      b'\xd1\xc4'],
        ['ROL BYTE PTR [esi-0x7942ff81], cl', b'\xd2\x86\x7f\x00\xbd\x86'],
        ['ROL DWORD PTR [edx+0x0], cl',     b'\xd3\x42\x00'],

        ['ROR DWORD PTR [ecx+0x0], 0xab',   b'\xc1\x49\x00\xab'],
        ['ROR DWORD PTR [ecx+0x0], 0xdc',   b'\xc1\x49\x00\xdc'],
        ['ROR DWORD PTR [edx+0x100004b], 0x2',b'\xc1\x8a\x4b\x00\x00\x01\x02'],
        ['ROR esp, 0x69',                   b'\xc1\xcc\x69'],
        ['ROR BYTE PTR [ecx+0x0], 1',       b'\xd0\x49\x00'],
        ['ROR BYTE PTR [ebx-0x7403ffb6], 1',b'\xd0\x8b\x4a\x00\xfc\x8b'],
        ['ROR BYTE PTR [ebp+0x468a007c], 1',  b'\xd0\x8d\x7c\x00\x8a\x46'],
        ['ROR DWORD PTR [eax-0x3eb1fcb9], 1', b'\xd1\x88\x47\x03\x4e\xc1'],
        ['ROR DWORD PTR [edx-0x75f877fa], 1', b'\xd1\x8a\x06\x88\x07\x8a'],
        ['ROR BYTE PTR [ecx+0x0], cl',      b'\xd2\x49\x00'],
        ['ROR bl, cl',                      b'\xd2\xcb'],
        ['ROR DWORD PTR [edx+0x0], cl',     b'\xd3\x4a\x00'],
        ['ROR edx, cl',                     b'\xd3\xca'],

        ['RSM',                             b'\x0f\xaa'],
        ['RSQRTSS xmm3, xmm1',              b'\xf3\x0f\x52\xd9'],
        ['RSQRTSS xmm5, xmm4',              b'\xf3\x0f\x52\xec'],
        ['SAHF',                            b'\x9e'],
        ['SAR esi, 0x2',                    b'\xc1\xfe\x02'],
        ['SAR eax, 1',                      b'\xd1\xf8'],
        ['SHL al, 0x4',                     b'\xc0\xe0\x04'],
        ['SHL ecx, 0x8',                    b'\xc1\xe1\x08'],
        ['SHL dl, cl',                      b'\xd2\xe2'],
        ['SHL edx, cl',                     b'\xd3\xe2'],
        #['SHL esi, cl',                     b'\xd3\xe6'],
        ['SHL ebp, cl',                     b'\xd3\xf5'],
        ['SHL esi, cl',                     b'\xd3\xf6'],
        ['SHR eax, 0x10',                   b'\xc1\xe8\x10'],
        ['SHR ebx, 1',                      b'\xd1\xeb'],
        ['SHLD edx, eax, 0x10',             b'\x0f\xa4\xc2\x10'],
        ['SHLD edx, eax, cl',               b'\x0f\xa5\xc2'],
        ['SHRD ecx, edx, 0x10',             b'\x0f\xac\xd1\x10'],
        ['SHRD ecx, ebx, 0x10',             b'\x0f\xac\xd9\x10'],
        ['SHRD eax, edx, cl',               b'\x0f\xad\xd0'],
        ['SAVEPREVSSP',                     b'\xf3\x0f\x01\xea'],
        ['SCAS eax, DWORD PTR es:[edi]',    b'\xaf'],
        ['SERIALIZE',                       b'\x0f\x01\xe8'],
        ['SETA cl',                         b'\x0f\x97\xc1'],
        ['SETB al',                         b'\x0f\x92\xc0'],
        ['SETBE al',                        b'\x0f\x96\xc0'],
        ['SETE BYTE PTR [esp+0x18]',        b'\x0f\x94\x44\x24\x18'],
        ['SETE BYTE PTR [esp+0x90]',        b'\x0f\x94\x84\x24\x90\x00\x00\x00'],
        ['SETG cl',                         b'\x0f\x9f\xc1'],
        ['SETGE dl',                        b'\x0f\x9d\xc2'],
        ['SETL BYTE PTR [esp+0x13]',        b'\x0f\x9c\x44\x24\x13'],
        ['SETL BYTE PTR [esp+0x17]',        b'\x0f\x9c\x44\x24\x17'],
        ['SETL dl',                         b'\x0f\x9c\xc2'],
        ['SETLE al',                        b'\x0f\x9e\xc0'],
        ['SETLE dl',                        b'\x0f\x9e\xc2'],
        ['SETNE BYTE PTR [ecx+0x0]',        b'\x0f\x95\x69\x00'],
        ['SETNE cl',                        b'\x0f\x95\xc1'],
        ['SETO BYTE PTR [eax-0x6f6f6f70]',  b'\x0f\x90\x90\x90\x90\x90\x90'],
        ['SFENCE',                          b'\x0f\xae\xf8'],
        ['SGDTD [ecx]',                     b'\x0f\x01\x01'],
        ['SHUFPS xmm1, xmm1, 0xff',         b'\x0f\xc6\xc9\xff'],
        ['SHUFPS xmm2, xmm2, 0x0' ,         b'\x0f\xc6\xd2\x00'],
        ['SHUFPS xmm0, XMMWORD PTR [esp+0x10], 0x0', b'\x0f\xc6\x44\x24\x10\x00'],
        ['SHUFPS xmm1, XMMWORD PTR [esp+0x10], 0x99',b'\x0f\xc6\x4c\x24\x10\x99'],
        ['SQRTPS xmm0, xmm0',               b'\x0f\x51\xc0'],
        ['SS PUSH ebp',                     b'\x36\x55'],
        ['SS OUT dx, al',                   b'\x36\xee'],
        ['STOS WORD PTR es:[edi], ax',      b'\x66\xab'],
        ['SUB esi, edi',                    b'\x2b\xf7'],
        ['SUB esp, 0x118',                  b'\x81\xec\x18\x01\x00\x00'],
        ['SUB esp, 0x58',                   b'\x83\xec\x58'],
        ['SUBPD xmm2, XMMWORD PTR [esp+0x130]', b'\x66\x0f\x5c\x94\x24\x30\x01\x00\x00'],
        ['SUBPD xmm2, xmm0',                b'\x66\x0f\x5c\xd0'],
        ['SUBPS xmm0, XMMWORD PTR ds:0x8eb1f0',b'\x0f\x5c\x05\xf0\xb1\x8e\x00'],
        ['SUBPS xmm1, xmm2',                b'\x0f\x5c\xca'],
        ['SUBPS xmm3, XMMWORD PTR [esp+0x50]',b'\x0f\x5c\x5c\x24\x50'],
        ['SUBPS xmm6, XMMWORD PTR [esp+0x40]',b'\x0f\x5c\x74\x24\x40'],
        ['SUBSS xmm0, DWORD PTR [esp+0x40]',b'\xf3\x0f\x5c\x44\x24\x40'],
        ['SUBSS xmm0, xmm3',                b'\xf3\x0f\x5c\xc3'],
        ['SUBSS xmm5, xmm4',                b'\xf3\x0f\x5c\xec'],
        ['STAC',                            b'\x0f\x01\xcb'],
        ['STC',                             b'\xf9'],
        ['STD',                             b'\xfd'],
        ['STI',                             b'\xfb'],
        ['SWAPGS',                          b'\x0f\x01\xf8'],
        ['SYSCALL',                         b'\x0f\x05'],
        ['SYSENTER',                        b'\x0f\x34'],
        ['SYSEXIT',                         b'\x0f\x35'],
        ['SYSRET',                          b'\x0f\x07'],
        ['TEST al, al',                     b'\x84\xc0'],
        ['TEST DWORD PTR [edx+0x0], ecx',   b'\x85\x4a\x00'],
        ['TEST DWORD PTR [ebx+0x384], esi', b'\x85\xb3\x84\x03\x00\x00'],
        ['TEST eax, eax',                   b'\x85\xc0'],
        ['TEST ax, ax',                     b'\x66\x85\xc0'],
        ['TEST al, 0x2',                    b'\xa8\x02'],
        ['TEST eax, 0xa9bb0041',            b'\xa9\x41\x00\xbb\xa9'],
        ['TEST BYTE PTR [esp+0x8], 0x1',    b'\xf6\x44\x24\x08\x01'],
        ['TEST BYTE PTR [ebp-0x30], 0x1',   b'\xf6\x45\xd0\x01'],
        ['TEST BYTE PTR [esi+0x68], 0x1',   b'\xf6\x46\x68\x01'],
        ['TEST BYTE PTR [ecx+0x0], 0x33',   b'\xf6\x49\x00\x33'],
        ['TEST BYTE PTR [esp+0x414], 0x1',  b'\xf6\x84\x24\x14\x04\x00\x00\x01'],
        ['TEST BYTE PTR [esi+0x31c], 0x2',  b'\xf6\x86\x1c\x03\x00\x00\x02'],
        ['TEST ah, 0x44',                   b'\xf6\xc4\x44'],
        ['TEST DWORD PTR [eax+0x0], 0x40f7c3', b'\xf7\x40\x00\xc3\xf7\x40\x00'],
        ['TEST DWORD PTR [ecx+0x0], 0x49f733', b'\xf7\x49\x00\x33\xf7\x49\x00'],
        ['TEST DWORD PTR [ebp+0x68c], 0x1000000', b'\xf7\x85\x8c\x06\x00\x00\x00\x00\x00\x01'],
        ['TEST ecx, 0xfffffff0',            b'\xf7\xc1\xf0\xff\xff\xff'],
        ['UNPCKHPS xmm0, XMMWORD PTR [esp+0x20]',b'\x0f\x15\x44\x24\x20'],
        ['UNPCKHPS xmm3, XMMWORD PTR [esp+0x30]',b'\x0f\x15\x5c\x24\x30'],
        ['UNPCKHPS xmm1, xmm0',             b'\x0f\x15\xc8'],
        ['UNPCKLPS xmm0, XMMWORD PTR [esp+0x30]',b'\x0f\x14\x44\x24\x30'],
        ['UNPCKLPS xmm1, xmm0',             b'\x0f\x14\xc8'],
        ['VZEROALL',                        b'\xc5\xfc\x77'],
        ['VZEROUPPER',                      b'\xc5\xf8\x77'],
        ['WAIT',                            b'\x9b'],
        ['WBINVD',                          b'\x0f\x09'],
        ['WBNOINVD',                        b'\xf3\x0f\x09'],
        ['WRMSR',                           b'\x0f\x30'],
        ['WRPKRU',                          b'\x0f\x01\xef'],
        ['XACQUIRE',                        b'\xf2'],
        ['XCHG BYTE PTR [ebp-0x400cffb7], bh',b'\x86\xbd\x49\x00\xf3\xbf'],
        ['XCHG BYTE PTR [eax], al',         b'\x86\x00'],
        ['XCHG BYTE PTR [edx+0x0], cl',     b'\x86\x4a\x00'],
        ['XCHG BYTE PTR [ebp+0x77], dl',    b'\x86\x55\x77'],
        ['XCHG BYTE PTR [edi+0x0], bl',     b'\x86\x5f\x00'],
        ['XCHG BYTE PTR [esi+ecx*2+0x0], bh',b'\x86\x7c\x4e\x00'],
        ['XCHG DWORD PTR [ebx-0x6f6fff81], ecx',b'\x87\x8b\x7f\x00\x90\x90'],
        ['XCHG BYTE PTR [edx+ecx*2+0x4a8b7c00], cl',b'\x86\x8c\x4a\x00\x7c\x8b\x4a'],
        ['XCHG BYTE PTR [edx+ecx*2+0x4a8bfc00], cl',b'\x86\x8c\x4a\x00\xfc\x8b\x4a'],
        ['XCHG al, ah',                     b'\x86\xe0'],
        ['XCHG DWORD PTR [esp], eax',       b'\x87\x04\x24'],
        ['XCHG DWORD PTR [edx+0x0], ecx',   b'\x87\x4a\x00'],
        ['XCHG DWORD PTR [edi+0x0], ebx',   b'\x87\x5f\x00'],
        ['XCHG DWORD PTR ds:[edx+0x0], ecx',b'\x3e\x87\x4a\x00'],
        ['XCHG edi, eax',                   b'\x97'],
        ['XRELEASE',                        b'\xf3'],
        ['XEND',                            b'\x0f\x01\xd5'],
        ['XGETBV',                          b'\x0f\x01\xd0'],
        ['XLAT',                            b'\xd7'],
        ['XOR eax, eax',                    b'\x33\xc0'], # Could also be \x31\xc0
        ['XORPD xmm0, xmm0',                b'\x66\x0f\x57\xc0'],
        ['XORPS xmm2, XMMWORD PTR ds:0x885650',b'\x0f\x57\x15\x50\x56\x88\x00'],
        ['XORPS xmm3, XMMWORD PTR ds:0x885640',b'\x0f\x57\x1d\x40\x56\x88\x00'],
        ['XORPS xmm0, XMMWORD PTR [esp+0x10]',b'\x0f\x57\x44\x24\x10'],
        ['XORPS xmm1, XMMWORD PTR [esp+0x20]',b'\x0f\x57\x4c\x24\x20'],
        ['XORPS xmm1, XMMWORD PTR [esp+0x90]',b'\x0f\x57\x8c\x24\x90\x00\x00\x00'],
        ['XORPS xmm0, xmm0',                b'\x0f\x57\xc0'],
        ['XSETBV',                          b'\x0f\x01\xd1'],
        ['XTEST',                           b'\x0f\x01\xd6'],
    ]
    state = {}
    for line, expected in cases:
        try:
            actual = assemble(line, state)
            if actual != expected:
                print(f'[ERROR] Unexpected assembly for line: {line}')
                print(f'  Expected: {expected.hex(" ")}')
                print(f'  But got:  {actual.hex(" ")}')
                sys.exit(1)
        except Exception as e:
            print(f'[ERROR] Exception thrown on assemble of instruction: {line}')
            print(f'  Expected: {expected.hex(" ")}')
            print(traceback.format_exc())
            sys.exit(1)

def test_assemble_file():
    with open('./test_7c280d.asm') as f:
        contents = f.read()
    state = {'eip': 0x7c280d}
    all_raw = b''
    for line in contents.splitlines():
        if not line.startswith(';'):
            raw = assemble(line, state)
            all_raw += raw
            state['eip'] += len(raw)
            #print(f'{state["eip"]:8x}:    {raw.hex(" "):24} {line}')
    #with open('./sro_client_7c280d.bin', 'wb') as f:
    #    f.write(all_raw)

def test_link():
    raw = link()
    with open('/tmp/zzz', 'wb') as f:
        f.write(raw)
    res = subprocess.run(['file', '/tmp/zzz'], capture_output=True)
    os.remove('/tmp/zzz')
    #raw = link()
    #raw_hex = hexlify(raw)
    #p1 = subprocess.Popen(['echo', '-ne', raw_hex], stdout=subprocess.PIPE)
    #res = subprocess.run(['file', '-'], stdin=p1.stdout, capture_output=True)
    if not 'ELF 32-bit LSB executable, Intel 80386' in res.stdout.decode():
        print(f'[ERROR] The generated bytes are not a valid ELF 32-bit executable')
        print(f'  file: {res}')
        sys.exit(1)

if __name__ == '__main__':
    test_disassemble()

    test_tokenize()
    test_assemble()
    test_assemble_file()

    test_link()
